<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bussiness.Fakes</name>
    </assembly>
    <members>
        <member name="T:Bussiness.CenterService.Fakes.ShimCenterServiceClient">
            <summary>Shim type of Bussiness.CenterService.CenterServiceClient</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.#ctor(Bussiness.CenterService.CenterServiceClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.Bind(Bussiness.CenterService.ICenterService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.Bind(System.ServiceModel.ICommunicationObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimCenterServiceClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AASGetState">
            <summary>Sets the shim of CenterServiceClient.AASGetState()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AASUpdateStateBoolean">
            <summary>Sets the shim of CenterServiceClient.AASUpdateState(Boolean state)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ActivePlayerBoolean">
            <summary>Sets the shim of CenterServiceClient.ActivePlayer(Boolean isActive)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ChargeMoneyInt32String">
            <summary>Sets the shim of CenterServiceClient.ChargeMoney(Int32 userID, String chargeID)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.Constructor">
            <summary>Sets the shim of CenterServiceClient.CenterServiceClient()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ConstructorBindingEndpointAddress">
            <summary>Sets the shim of CenterServiceClient.CenterServiceClient(Binding binding, EndpointAddress remoteAddress)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ConstructorString">
            <summary>Sets the shim of CenterServiceClient.CenterServiceClient(String endpointConfigurationName)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ConstructorStringEndpointAddress">
            <summary>Sets the shim of CenterServiceClient.CenterServiceClient(String endpointConfigurationName, EndpointAddress remoteAddress)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ConstructorStringString">
            <summary>Sets the shim of CenterServiceClient.CenterServiceClient(String endpointConfigurationName, String remoteAddress)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.CreatePlayerInt32StringStringBoolean">
            <summary>Sets the shim of CenterServiceClient.CreatePlayer(Int32 id, String name, String password, Boolean isFirst)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ExperienceRateUpdateInt32">
            <summary>Sets the shim of CenterServiceClient.ExperienceRateUpdate(Int32 serverId)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.GetConfigStateInt32">
            <summary>Sets the shim of CenterServiceClient.GetConfigState(Int32 type)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.GetServerList">
            <summary>Sets the shim of CenterServiceClient.GetServerList()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.KitoffUserInt32String">
            <summary>Sets the shim of CenterServiceClient.KitoffUser(Int32 playerID, String msg)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.MailNoticeInt32">
            <summary>Sets the shim of CenterServiceClient.MailNotice(Int32 playerID)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.NoticeServerUpdateInt32Int32">
            <summary>Sets the shim of CenterServiceClient.NoticeServerUpdate(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ReLoadServerList">
            <summary>Sets the shim of CenterServiceClient.ReLoadServerList()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ReloadString">
            <summary>Sets the shim of CenterServiceClient.Reload(String type)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.SystemNoticeString">
            <summary>Sets the shim of CenterServiceClient.SystemNotice(String msg)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.UpdateConfigStateInt32Boolean">
            <summary>Sets the shim of CenterServiceClient.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.ValidateLoginAndGetIDStringStringInt32RefBooleanRef">
            <summary>Sets the shim of CenterServiceClient.ValidateLoginAndGetID(String name, String password, Int32&amp; userID, Boolean&amp; isFirst)</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.AASGetState">
            <summary>Sets the shim of CenterServiceClient.AASGetState()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.AASUpdateStateBoolean">
            <summary>Sets the shim of CenterServiceClient.AASUpdateState(Boolean state)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.ActivePlayerBoolean">
            <summary>Sets the shim of CenterServiceClient.ActivePlayer(Boolean isActive)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.ChargeMoneyInt32String">
            <summary>Sets the shim of CenterServiceClient.ChargeMoney(Int32 userID, String chargeID)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.CreatePlayerInt32StringStringBoolean">
            <summary>Sets the shim of CenterServiceClient.CreatePlayer(Int32 id, String name, String password, Boolean isFirst)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.ExperienceRateUpdateInt32">
            <summary>Sets the shim of CenterServiceClient.ExperienceRateUpdate(Int32 serverId)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.GetConfigStateInt32">
            <summary>Sets the shim of CenterServiceClient.GetConfigState(Int32 type)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.GetServerList">
            <summary>Sets the shim of CenterServiceClient.GetServerList()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.KitoffUserInt32String">
            <summary>Sets the shim of CenterServiceClient.KitoffUser(Int32 playerID, String msg)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.MailNoticeInt32">
            <summary>Sets the shim of CenterServiceClient.MailNotice(Int32 playerID)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.NoticeServerUpdateInt32Int32">
            <summary>Sets the shim of CenterServiceClient.NoticeServerUpdate(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.ReLoadServerList">
            <summary>Sets the shim of CenterServiceClient.ReLoadServerList()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.ReloadString">
            <summary>Sets the shim of CenterServiceClient.Reload(String type)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.SystemNoticeString">
            <summary>Sets the shim of CenterServiceClient.SystemNotice(String msg)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.UpdateConfigStateInt32Boolean">
            <summary>Sets the shim of CenterServiceClient.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimCenterServiceClient.AllInstances.ValidateLoginAndGetIDStringStringInt32RefBooleanRef">
            <summary>Sets the shim of CenterServiceClient.ValidateLoginAndGetID(String name, String password, Int32&amp; userID, Boolean&amp; isFirst)</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.ShimServerData">
            <summary>Shim type of Bussiness.CenterService.ServerData</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimServerData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimServerData.#ctor(Bussiness.CenterService.ServerData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimServerData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimServerData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimServerData.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.ShimServerData.Bind(System.Runtime.Serialization.IExtensibleDataObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.Constructor">
            <summary>Sets the shim of ServerData.ServerData()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.ExtensionDataGet">
            <summary>Sets the shim of ServerData.get_ExtensionData()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of ServerData.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.IdGet">
            <summary>Sets the shim of ServerData.get_Id()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.IdSetInt32">
            <summary>Sets the shim of ServerData.set_Id(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.IpGet">
            <summary>Sets the shim of ServerData.get_Ip()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.IpSetString">
            <summary>Sets the shim of ServerData.set_Ip(String value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.LowestLevelGet">
            <summary>Sets the shim of ServerData.get_LowestLevel()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.LowestLevelSetInt32">
            <summary>Sets the shim of ServerData.set_LowestLevel(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.MustLevelGet">
            <summary>Sets the shim of ServerData.get_MustLevel()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.MustLevelSetInt32">
            <summary>Sets the shim of ServerData.set_MustLevel(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.NameGet">
            <summary>Sets the shim of ServerData.get_Name()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.NameSetString">
            <summary>Sets the shim of ServerData.set_Name(String value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.OnlineGet">
            <summary>Sets the shim of ServerData.get_Online()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.OnlineSetInt32">
            <summary>Sets the shim of ServerData.set_Online(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.PortGet">
            <summary>Sets the shim of ServerData.get_Port()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.PortSetInt32">
            <summary>Sets the shim of ServerData.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of ServerData.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of ServerData.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.RaisePropertyChangedString">
            <summary>Sets the shim of ServerData.RaisePropertyChanged(String propertyName)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.StateGet">
            <summary>Sets the shim of ServerData.get_State()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.StateSetInt32">
            <summary>Sets the shim of ServerData.set_State(Int32 value)</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.ShimServerData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.ExtensionDataGet">
            <summary>Sets the shim of ServerData.get_ExtensionData()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.ExtensionDataSetExtensionDataObject">
            <summary>Sets the shim of ServerData.set_ExtensionData(ExtensionDataObject value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.IdGet">
            <summary>Sets the shim of ServerData.get_Id()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.IdSetInt32">
            <summary>Sets the shim of ServerData.set_Id(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.IpGet">
            <summary>Sets the shim of ServerData.get_Ip()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.IpSetString">
            <summary>Sets the shim of ServerData.set_Ip(String value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.LowestLevelGet">
            <summary>Sets the shim of ServerData.get_LowestLevel()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.LowestLevelSetInt32">
            <summary>Sets the shim of ServerData.set_LowestLevel(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.MustLevelGet">
            <summary>Sets the shim of ServerData.get_MustLevel()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.MustLevelSetInt32">
            <summary>Sets the shim of ServerData.set_MustLevel(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.NameGet">
            <summary>Sets the shim of ServerData.get_Name()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.NameSetString">
            <summary>Sets the shim of ServerData.set_Name(String value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.OnlineGet">
            <summary>Sets the shim of ServerData.get_Online()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.OnlineSetInt32">
            <summary>Sets the shim of ServerData.set_Online(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.PortGet">
            <summary>Sets the shim of ServerData.get_Port()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.PortSetInt32">
            <summary>Sets the shim of ServerData.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of ServerData.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of ServerData.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.RaisePropertyChangedString">
            <summary>Sets the shim of ServerData.RaisePropertyChanged(String propertyName)</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.StateGet">
            <summary>Sets the shim of ServerData.get_State()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.ShimServerData.AllInstances.StateSetInt32">
            <summary>Sets the shim of ServerData.set_State(Int32 value)</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.StubCenterServiceClient">
            <summary>Stub type of Bussiness.CenterService.CenterServiceClient</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.CreateChannel">
            <summary>Sets the stub of ClientBase`1.CreateChannel()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubCenterServiceClient.CreateChannel01">
            <summary>Sets the stub of ClientBase`1.CreateChannel()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubCenterServiceClient.InitializeStub">
            <summary>Initializes a new instance of type StubCenterServiceClient</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubCenterServiceClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubCenterServiceClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubCenterServiceClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.StubICenterService">
            <summary>Stub type of Bussiness.CenterService.ICenterService</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.#ctor">
            <summary>Initializes a new instance of type StubICenterService</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.AASGetState">
            <summary>Sets the stub of ICenterService.AASGetState()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.AASUpdateStateBoolean">
            <summary>Sets the stub of ICenterService.AASUpdateState(Boolean state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.ActivePlayerBoolean">
            <summary>Sets the stub of ICenterService.ActivePlayer(Boolean isActive)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#AASGetState">
            <summary>Sets the stub of ICenterService.AASGetState()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#AASUpdateState(System.Boolean)">
            <summary>Sets the stub of ICenterService.AASUpdateState(Boolean state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#ActivePlayer(System.Boolean)">
            <summary>Sets the stub of ICenterService.ActivePlayer(Boolean isActive)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#ChargeMoney(System.Int32,System.String)">
            <summary>Sets the stub of ICenterService.ChargeMoney(Int32 userID, String chargeID)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#CreatePlayer(System.Int32,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of ICenterService.CreatePlayer(Int32 id, String name, String password, Boolean isFirst)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#ExperienceRateUpdate(System.Int32)">
            <summary>Sets the stub of ICenterService.ExperienceRateUpdate(Int32 serverId)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#GetConfigState(System.Int32)">
            <summary>Sets the stub of ICenterService.GetConfigState(Int32 type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#GetServerList">
            <summary>Sets the stub of ICenterService.GetServerList()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#KitoffUser(System.Int32,System.String)">
            <summary>Sets the stub of ICenterService.KitoffUser(Int32 playerID, String msg)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#MailNotice(System.Int32)">
            <summary>Sets the stub of ICenterService.MailNotice(Int32 playerID)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#NoticeServerUpdate(System.Int32,System.Int32)">
            <summary>Sets the stub of ICenterService.NoticeServerUpdate(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#ReLoadServerList">
            <summary>Sets the stub of ICenterService.ReLoadServerList()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#Reload(System.String)">
            <summary>Sets the stub of ICenterService.Reload(String type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#SystemNotice(System.String)">
            <summary>Sets the stub of ICenterService.SystemNotice(String msg)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#UpdateConfigState(System.Int32,System.Boolean)">
            <summary>Sets the stub of ICenterService.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterService.b::Bussiness#CenterService#ICenterService#ValidateLoginAndGetID(System.String,System.String,System.Int32@,System.Boolean@)">
            <summary>Sets the stub of ICenterService.ValidateLoginAndGetID(String name, String password, Int32&amp; userID, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.ChargeMoneyInt32String">
            <summary>Sets the stub of ICenterService.ChargeMoney(Int32 userID, String chargeID)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.CreatePlayerInt32StringStringBoolean">
            <summary>Sets the stub of ICenterService.CreatePlayer(Int32 id, String name, String password, Boolean isFirst)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.ExperienceRateUpdateInt32">
            <summary>Sets the stub of ICenterService.ExperienceRateUpdate(Int32 serverId)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.GetConfigStateInt32">
            <summary>Sets the stub of ICenterService.GetConfigState(Int32 type)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.GetServerList">
            <summary>Sets the stub of ICenterService.GetServerList()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.KitoffUserInt32String">
            <summary>Sets the stub of ICenterService.KitoffUser(Int32 playerID, String msg)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.MailNoticeInt32">
            <summary>Sets the stub of ICenterService.MailNotice(Int32 playerID)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.NoticeServerUpdateInt32Int32">
            <summary>Sets the stub of ICenterService.NoticeServerUpdate(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.ReLoadServerList">
            <summary>Sets the stub of ICenterService.ReLoadServerList()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.ReloadString">
            <summary>Sets the stub of ICenterService.Reload(String type)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.SystemNoticeString">
            <summary>Sets the stub of ICenterService.SystemNotice(String msg)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.UpdateConfigStateInt32Boolean">
            <summary>Sets the stub of ICenterService.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterService.ValidateLoginAndGetIDStringStringInt32RefBooleanRef">
            <summary>Sets the stub of ICenterService.ValidateLoginAndGetID(String name, String password, Int32&amp; userID, Boolean&amp; isFirst)</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.StubICenterServiceChannel">
            <summary>Stub type of Bussiness.CenterService.ICenterServiceChannel</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.#ctor">
            <summary>Initializes a new instance of type StubICenterServiceChannel</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AASGetState">
            <summary>Sets the stub of ICenterService.AASGetState()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AASUpdateStateBoolean">
            <summary>Sets the stub of ICenterService.AASUpdateState(Boolean state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.Abort">
            <summary>Sets the stub of ICommunicationObject.Abort()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ActivePlayerBoolean">
            <summary>Sets the stub of ICenterService.ActivePlayer(Boolean isActive)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AllowInitializationUIGet">
            <summary>Sets the stub of IClientChannel.get_AllowInitializationUI()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AllowInitializationUISetBoolean">
            <summary>Sets the stub of IClientChannel.set_AllowInitializationUI(Boolean value)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AllowOutputBatchingGet">
            <summary>Sets the stub of IContextChannel.get_AllowOutputBatching()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AllowOutputBatchingSetBoolean">
            <summary>Sets the stub of IContextChannel.set_AllowOutputBatching(Boolean value)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AttachBackingFieldToAllowInitializationUI">
            <summary>Attaches delegates to emulate StubICenterServiceChannel.AllowInitializationUI as a property with a backing field.</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AttachBackingFieldToAllowOutputBatching">
            <summary>Attaches delegates to emulate StubICenterServiceChannel.AllowOutputBatching as a property with a backing field.</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.AttachBackingFieldToOperationTimeout">
            <summary>Attaches delegates to emulate StubICenterServiceChannel.OperationTimeout as a property with a backing field.</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.BeginCloseAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginClose(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.BeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.BeginDisplayInitializationUIAsyncCallbackObject">
            <summary>Sets the stub of IClientChannel.BeginDisplayInitializationUI(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.BeginOpenAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.BeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#AASGetState">
            <summary>Sets the stub of ICenterService.AASGetState()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#AASUpdateState(System.Boolean)">
            <summary>Sets the stub of ICenterService.AASUpdateState(Boolean state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#ActivePlayer(System.Boolean)">
            <summary>Sets the stub of ICenterService.ActivePlayer(Boolean isActive)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#ChargeMoney(System.Int32,System.String)">
            <summary>Sets the stub of ICenterService.ChargeMoney(Int32 userID, String chargeID)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#CreatePlayer(System.Int32,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of ICenterService.CreatePlayer(Int32 id, String name, String password, Boolean isFirst)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#ExperienceRateUpdate(System.Int32)">
            <summary>Sets the stub of ICenterService.ExperienceRateUpdate(Int32 serverId)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#GetConfigState(System.Int32)">
            <summary>Sets the stub of ICenterService.GetConfigState(Int32 type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#GetServerList">
            <summary>Sets the stub of ICenterService.GetServerList()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#KitoffUser(System.Int32,System.String)">
            <summary>Sets the stub of ICenterService.KitoffUser(Int32 playerID, String msg)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#MailNotice(System.Int32)">
            <summary>Sets the stub of ICenterService.MailNotice(Int32 playerID)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#NoticeServerUpdate(System.Int32,System.Int32)">
            <summary>Sets the stub of ICenterService.NoticeServerUpdate(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#ReLoadServerList">
            <summary>Sets the stub of ICenterService.ReLoadServerList()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#Reload(System.String)">
            <summary>Sets the stub of ICenterService.Reload(String type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#SystemNotice(System.String)">
            <summary>Sets the stub of ICenterService.SystemNotice(String msg)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#UpdateConfigState(System.Int32,System.Boolean)">
            <summary>Sets the stub of ICenterService.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.b::Bussiness#CenterService#ICenterService#ValidateLoginAndGetID(System.String,System.String,System.Int32@,System.Boolean@)">
            <summary>Sets the stub of ICenterService.ValidateLoginAndGetID(String name, String password, Int32&amp; userID, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ChargeMoneyInt32String">
            <summary>Sets the stub of ICenterService.ChargeMoney(Int32 userID, String chargeID)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.Close">
            <summary>Sets the stub of ICommunicationObject.Close()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.CloseTimeSpan">
            <summary>Sets the stub of ICommunicationObject.Close(TimeSpan timeout)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.CreatePlayerInt32StringStringBoolean">
            <summary>Sets the stub of ICenterService.CreatePlayer(Int32 id, String name, String password, Boolean isFirst)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.DidInteractiveInitializationGet">
            <summary>Sets the stub of IClientChannel.get_DidInteractiveInitialization()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.DisplayInitializationUI">
            <summary>Sets the stub of IClientChannel.DisplayInitializationUI()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.EndCloseIAsyncResult">
            <summary>Sets the stub of ICommunicationObject.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.EndDisplayInitializationUIIAsyncResult">
            <summary>Sets the stub of IClientChannel.EndDisplayInitializationUI(IAsyncResult result)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.EndOpenIAsyncResult">
            <summary>Sets the stub of ICommunicationObject.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ExperienceRateUpdateInt32">
            <summary>Sets the stub of ICenterService.ExperienceRateUpdate(Int32 serverId)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ExtensionsGet">
            <summary>Sets the stub of IExtensibleObject`1.get_Extensions()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.GetConfigStateInt32">
            <summary>Sets the stub of ICenterService.GetConfigState(Int32 type)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.GetPropertyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetProperty()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.GetServerList">
            <summary>Sets the stub of ICenterService.GetServerList()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.InputSessionGet">
            <summary>Sets the stub of IContextChannel.get_InputSession()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.KitoffUserInt32String">
            <summary>Sets the stub of ICenterService.KitoffUser(Int32 playerID, String msg)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.LocalAddressGet">
            <summary>Sets the stub of IContextChannel.get_LocalAddress()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.MailNoticeInt32">
            <summary>Sets the stub of ICenterService.MailNotice(Int32 playerID)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.NoticeServerUpdateInt32Int32">
            <summary>Sets the stub of ICenterService.NoticeServerUpdate(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.Open">
            <summary>Sets the stub of ICommunicationObject.Open()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.OpenTimeSpan">
            <summary>Sets the stub of ICommunicationObject.Open(TimeSpan timeout)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.OperationTimeoutGet">
            <summary>Sets the stub of IContextChannel.get_OperationTimeout()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.OperationTimeoutSetTimeSpan">
            <summary>Sets the stub of IContextChannel.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.OutputSessionGet">
            <summary>Sets the stub of IContextChannel.get_OutputSession()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ReLoadServerList">
            <summary>Sets the stub of ICenterService.ReLoadServerList()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ReloadString">
            <summary>Sets the stub of ICenterService.Reload(String type)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.RemoteAddressGet">
            <summary>Sets the stub of IContextChannel.get_RemoteAddress()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.SessionIdGet">
            <summary>Sets the stub of IContextChannel.get_SessionId()</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.StateGet">
            <summary>Sets the stub of ICommunicationObject.get_State()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#Channels#IChannel#GetProperty``1">
            <summary>Sets the stub of IChannel.GetProperty()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of IClientChannel.BeginDisplayInitializationUI(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IClientChannel#DisplayInitializationUI">
            <summary>Sets the stub of IClientChannel.DisplayInitializationUI()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
            <summary>Sets the stub of IClientChannel.EndDisplayInitializationUI(IAsyncResult result)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#Abort">
            <summary>Sets the stub of ICommunicationObject.Abort()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginClose(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#Close">
            <summary>Sets the stub of ICommunicationObject.Close()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
            <summary>Sets the stub of ICommunicationObject.Close(TimeSpan timeout)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
            <summary>Sets the stub of ICommunicationObject.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
            <summary>Sets the stub of ICommunicationObject.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#Open">
            <summary>Sets the stub of ICommunicationObject.Open()</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
            <summary>Sets the stub of ICommunicationObject.Open(TimeSpan timeout)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.SystemNoticeString">
            <summary>Sets the stub of ICenterService.SystemNotice(String msg)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.UpdateConfigStateInt32Boolean">
            <summary>Sets the stub of ICenterService.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ValidateLoginAndGetIDStringStringInt32RefBooleanRef">
            <summary>Sets the stub of ICenterService.ValidateLoginAndGetID(String name, String password, Int32&amp; userID, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ViaGet">
            <summary>Sets the stub of IClientChannel.get_Via()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IClientChannel#AllowInitializationUI">
            <summary>Sets the stub of IClientChannel.get_AllowInitializationUI()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#AllowOutputBatching">
            <summary>Sets the stub of IContextChannel.get_AllowOutputBatching()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IClientChannel#DidInteractiveInitialization">
            <summary>Sets the stub of IClientChannel.get_DidInteractiveInitialization()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions">
            <summary>Sets the stub of IExtensibleObject`1.get_Extensions()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#InputSession">
            <summary>Sets the stub of IContextChannel.get_InputSession()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#LocalAddress">
            <summary>Sets the stub of IContextChannel.get_LocalAddress()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#OperationTimeout">
            <summary>Sets the stub of IContextChannel.get_OperationTimeout()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#OutputSession">
            <summary>Sets the stub of IContextChannel.get_OutputSession()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#RemoteAddress">
            <summary>Sets the stub of IContextChannel.get_RemoteAddress()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IContextChannel#SessionId">
            <summary>Sets the stub of IContextChannel.get_SessionId()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#ICommunicationObject#State">
            <summary>Sets the stub of ICommunicationObject.get_State()</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubICenterServiceChannel.ssm::System#ServiceModel#IClientChannel#Via">
            <summary>Sets the stub of IClientChannel.get_Via()</summary>
        </member>
        <member name="T:Bussiness.CenterService.Fakes.StubServerData">
            <summary>Stub type of Bussiness.CenterService.ServerData</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubServerData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.CenterService.Fakes.StubServerData.InitializeStub">
            <summary>Initializes a new instance of type StubServerData</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubServerData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubServerData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.CenterService.Fakes.StubServerData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimActiveBussiness">
            <summary>Shim type of Bussiness.ActiveBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimActiveBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimActiveBussiness.#ctor(Bussiness.ActiveBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimActiveBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimActiveBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimActiveBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AddActiveNumberStringInt32">
            <summary>Sets the shim of ActiveBussiness.AddActiveNumber(String AwardID, Int32 ActiveID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.Constructor">
            <summary>Sets the shim of ActiveBussiness.ActiveBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.GetAllActives">
            <summary>Sets the shim of ActiveBussiness.GetAllActives()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.GetSingleActiveConvertItemsInt32">
            <summary>Sets the shim of ActiveBussiness.GetSingleActiveConvertItems(Int32 activeID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.GetSingleActivesInt32">
            <summary>Sets the shim of ActiveBussiness.GetSingleActives(Int32 activeID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.InitActiveConvertItemInfoSqlDataReader">
            <summary>Sets the shim of ActiveBussiness.InitActiveConvertItemInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.InitActiveInfoSqlDataReader">
            <summary>Sets the shim of ActiveBussiness.InitActiveInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.PullDownInt32StringInt32StringRef">
            <summary>Sets the shim of ActiveBussiness.PullDown(Int32 activeID, String awardID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimActiveBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.AddActiveNumberStringInt32">
            <summary>Sets the shim of ActiveBussiness.AddActiveNumber(String AwardID, Int32 ActiveID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.GetAllActives">
            <summary>Sets the shim of ActiveBussiness.GetAllActives()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.GetSingleActiveConvertItemsInt32">
            <summary>Sets the shim of ActiveBussiness.GetSingleActiveConvertItems(Int32 activeID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.GetSingleActivesInt32">
            <summary>Sets the shim of ActiveBussiness.GetSingleActives(Int32 activeID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.InitActiveConvertItemInfoSqlDataReader">
            <summary>Sets the shim of ActiveBussiness.InitActiveConvertItemInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.InitActiveInfoSqlDataReader">
            <summary>Sets the shim of ActiveBussiness.InitActiveInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimActiveBussiness.AllInstances.PullDownInt32StringInt32StringRef">
            <summary>Sets the shim of ActiveBussiness.PullDown(Int32 activeID, String awardID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimBase64">
            <summary>Shim type of Bussiness.Base64</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBase64.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBase64.#ctor(Bussiness.Base64)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBase64.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBase64.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBase64.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBase64.Constructor">
            <summary>Sets the shim of Base64.Base64()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBase64.StaticConstructor">
            <summary>Sets the shim of Base64.Base64()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBase64.decodeToByteArray2String">
            <summary>Sets the shim of Base64.decodeToByteArray2(String param1)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBase64.decodeToByteArrayString">
            <summary>Sets the shim of Base64.decodeToByteArray(String param1)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBase64.encodeByteArrayByteArray">
            <summary>Sets the shim of Base64.encodeByteArray(Byte[] param1)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimBase64.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimBaseBussiness">
            <summary>Shim type of Bussiness.BaseBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBaseBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBaseBussiness.#ctor(Bussiness.BaseBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBaseBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBaseBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimBaseBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.Constructor">
            <summary>Sets the shim of BaseBussiness.BaseBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.Dispose">
            <summary>Sets the shim of BaseBussiness.Dispose()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.GetPageStringStringInt32Int32StringStringStringInt32Ref">
            <summary>Sets the shim of BaseBussiness.GetPage(String queryStr, String queryWhere, Int32 pageCurrent, Int32 pageSize, String fdShow, String fdOreder, String fdKey, Int32&amp; total)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.StaticConstructor">
            <summary>Sets the shim of BaseBussiness.BaseBussiness()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimBaseBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.AllInstances.Dispose">
            <summary>Sets the shim of BaseBussiness.Dispose()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimBaseBussiness.AllInstances.GetPageStringStringInt32Int32StringStringStringInt32Ref">
            <summary>Sets the shim of BaseBussiness.GetPage(String queryStr, String queryWhere, Int32 pageCurrent, Int32 pageSize, String fdShow, String fdOreder, String fdKey, Int32&amp; total)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimCheckCode">
            <summary>Shim type of Bussiness.CheckCode</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCheckCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCheckCode.#ctor(Bussiness.CheckCode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCheckCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCheckCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCheckCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCheckCode.Constructor">
            <summary>Sets the shim of CheckCode.CheckCode()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCheckCode.CreateImageString">
            <summary>Sets the shim of CheckCode.CreateImage(String randomcode)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCheckCode.GenerateCheckCode">
            <summary>Sets the shim of CheckCode.GenerateCheckCode()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCheckCode.StaticConstructor">
            <summary>Sets the shim of CheckCode.CheckCode()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimCheckCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimConsortiaBussiness">
            <summary>Shim type of Bussiness.ConsortiaBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimConsortiaBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimConsortiaBussiness.#ctor(Bussiness.ConsortiaBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimConsortiaBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimConsortiaBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimConsortiaBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddAndUpdateConsortiaEuqipControlConsortiaEquipControlInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddAndUpdateConsortiaEuqipControl(ConsortiaEquipControlInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddConsortiaAllyConsortiaAllyInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaAlly(ConsortiaAllyInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddConsortiaApplyAllyConsortiaApplyAllyInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaApplyAlly(ConsortiaApplyAllyInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddConsortiaApplyUsersConsortiaApplyUserInfoStringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaApplyUsers(ConsortiaApplyUserInfo info, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddConsortiaConsortiaInfoStringRefConsortiaDutyInfoRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortia(ConsortiaInfo info, String&amp; msg, ConsortiaDutyInfo&amp; dutyInfo)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddConsortiaDutyConsortiaDutyInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaDuty(ConsortiaDutyInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AddConsortiaInviteUsersConsortiaInviteUserInfoStringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaInviteUsers(ConsortiaInviteUserInfo info, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.BuyBadgeInt32Int32ConsortiaInfoStringRef">
            <summary>Sets the shim of ConsortiaBussiness.BuyBadge(Int32 consortiaID, Int32 userID, ConsortiaInfo info, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.ConsortiaRichAddInt32Int32Ref">
            <summary>Sets the shim of ConsortiaBussiness.ConsortiaRichAdd(Int32 consortiID, Int32&amp; riches)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.Constructor">
            <summary>Sets the shim of ConsortiaBussiness.ConsortiaBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.DeleteConsortiaApplyAllyInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaApplyAlly(Int32 applyID, Int32 userID, Int32 consortiaID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.DeleteConsortiaApplyUsersInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaApplyUsers(Int32 applyID, Int32 userID, Int32 consortiaID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.DeleteConsortiaDutyInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaDuty(Int32 dutyID, Int32 userID, Int32 consortiaID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.DeleteConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.DeleteConsortiaInviteUsersInt32Int32">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaInviteUsers(Int32 intiveID, Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.DeleteConsortiaUserInt32Int32Int32StringRefStringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaUser(Int32 userID, Int32 kickUserID, Int32 consortiaID, String&amp; msg, String&amp; nickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetAllConsortiaLevel">
            <summary>Sets the shim of ConsortiaBussiness.GetAllConsortiaLevel()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaAll">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaAll()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaAllyAll">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaAllyAll()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaByAllyByStateInt32Int32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaByAllyByState(Int32 consortiaID, Int32 state)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaByAllyInt32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaByAlly(Int32 consortiaID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaEuqipRichesInt32Int32Int32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaEuqipRiches(Int32 consortiaID, Int32 Level, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaSingleByNameString">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaSingleByName(String ConsortiaName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaSingleInt32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaSingle(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.GetConsortiaUsersByUserIDInt32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaUsersByUserID(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.RenameConsortiaInt32StringString">
            <summary>Sets the shim of ConsortiaBussiness.RenameConsortia(Int32 ConsortiaID, String nickName, String newNickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.RenameConsortiaNameStringStringStringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.RenameConsortiaName(String userName, String nickName, String consortiaName, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.ScanConsortiaStringRef">
            <summary>Sets the shim of ConsortiaBussiness.ScanConsortia(String&amp; noticeID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpGradeConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpGradeShopConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeShopConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpGradeSkillConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeSkillConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpGradeSmithConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeSmithConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpGradeStoreConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeStoreConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpdateConsortiaDescriptionInt32Int32StringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaDescription(Int32 consortiaID, Int32 userID, String description, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpdateConsortiaDutyConsortiaDutyInfoInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaDuty(ConsortiaDutyInfo info, Int32 userID, Int32 updateType, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpdateConsortiaPlacardInt32Int32StringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaPlacard(Int32 consortiaID, Int32 userID, String placard, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpdateConsortiaRichesInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaRiches(Int32 consortiaID, Int32 userID, Int32 Riches, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpdateConsortiaUserRemarkInt32Int32Int32StringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaUserRemark(Int32 id, Int32 consortiaID, Int32 userID, String remark, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.UpdateConsotiaApplyStateInt32Int32BooleanStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsotiaApplyState(Int32 consortiaID, Int32 userID, Boolean state, String&amp; msg)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddAndUpdateConsortiaEuqipControlConsortiaEquipControlInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddAndUpdateConsortiaEuqipControl(ConsortiaEquipControlInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddConsortiaAllyConsortiaAllyInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaAlly(ConsortiaAllyInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddConsortiaApplyAllyConsortiaApplyAllyInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaApplyAlly(ConsortiaApplyAllyInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddConsortiaApplyUsersConsortiaApplyUserInfoStringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaApplyUsers(ConsortiaApplyUserInfo info, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddConsortiaConsortiaInfoStringRefConsortiaDutyInfoRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortia(ConsortiaInfo info, String&amp; msg, ConsortiaDutyInfo&amp; dutyInfo)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddConsortiaDutyConsortiaDutyInfoInt32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaDuty(ConsortiaDutyInfo info, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.AddConsortiaInviteUsersConsortiaInviteUserInfoStringRef">
            <summary>Sets the shim of ConsortiaBussiness.AddConsortiaInviteUsers(ConsortiaInviteUserInfo info, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.BuyBadgeInt32Int32ConsortiaInfoStringRef">
            <summary>Sets the shim of ConsortiaBussiness.BuyBadge(Int32 consortiaID, Int32 userID, ConsortiaInfo info, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.ConsortiaRichAddInt32Int32Ref">
            <summary>Sets the shim of ConsortiaBussiness.ConsortiaRichAdd(Int32 consortiID, Int32&amp; riches)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.DeleteConsortiaApplyAllyInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaApplyAlly(Int32 applyID, Int32 userID, Int32 consortiaID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.DeleteConsortiaApplyUsersInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaApplyUsers(Int32 applyID, Int32 userID, Int32 consortiaID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.DeleteConsortiaDutyInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaDuty(Int32 dutyID, Int32 userID, Int32 consortiaID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.DeleteConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.DeleteConsortiaInviteUsersInt32Int32">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaInviteUsers(Int32 intiveID, Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.DeleteConsortiaUserInt32Int32Int32StringRefStringRef">
            <summary>Sets the shim of ConsortiaBussiness.DeleteConsortiaUser(Int32 userID, Int32 kickUserID, Int32 consortiaID, String&amp; msg, String&amp; nickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetAllConsortiaLevel">
            <summary>Sets the shim of ConsortiaBussiness.GetAllConsortiaLevel()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaAll">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaAll()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaAllyAll">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaAllyAll()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaByAllyByStateInt32Int32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaByAllyByState(Int32 consortiaID, Int32 state)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaByAllyInt32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaByAlly(Int32 consortiaID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaEuqipRichesInt32Int32Int32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaEuqipRiches(Int32 consortiaID, Int32 Level, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaSingleByNameString">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaSingleByName(String ConsortiaName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaSingleInt32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaSingle(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.GetConsortiaUsersByUserIDInt32">
            <summary>Sets the shim of ConsortiaBussiness.GetConsortiaUsersByUserID(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.RenameConsortiaInt32StringString">
            <summary>Sets the shim of ConsortiaBussiness.RenameConsortia(Int32 ConsortiaID, String nickName, String newNickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.RenameConsortiaNameStringStringStringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.RenameConsortiaName(String userName, String nickName, String consortiaName, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.ScanConsortiaStringRef">
            <summary>Sets the shim of ConsortiaBussiness.ScanConsortia(String&amp; noticeID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpGradeConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpGradeShopConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeShopConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpGradeSkillConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeSkillConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpGradeSmithConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeSmithConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpGradeStoreConsortiaInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpGradeStoreConsortia(Int32 consortiaID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpdateConsortiaDescriptionInt32Int32StringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaDescription(Int32 consortiaID, Int32 userID, String description, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpdateConsortiaDutyConsortiaDutyInfoInt32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaDuty(ConsortiaDutyInfo info, Int32 userID, Int32 updateType, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpdateConsortiaPlacardInt32Int32StringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaPlacard(Int32 consortiaID, Int32 userID, String placard, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpdateConsortiaRichesInt32Int32Int32StringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaRiches(Int32 consortiaID, Int32 userID, Int32 Riches, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpdateConsortiaUserRemarkInt32Int32Int32StringStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsortiaUserRemark(Int32 id, Int32 consortiaID, Int32 userID, String remark, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimConsortiaBussiness.AllInstances.UpdateConsotiaApplyStateInt32Int32BooleanStringRef">
            <summary>Sets the shim of ConsortiaBussiness.UpdateConsotiaApplyState(Int32 consortiaID, Int32 userID, Boolean state, String&amp; msg)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimCookieInfoBussiness">
            <summary>Shim type of Bussiness.CookieInfoBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCookieInfoBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCookieInfoBussiness.#ctor(Bussiness.CookieInfoBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCookieInfoBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCookieInfoBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCookieInfoBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCookieInfoBussiness.AddCookieInfoStringStringString">
            <summary>Sets the shim of CookieInfoBussiness.AddCookieInfo(String bdSigUser, String bdSigPortrait, String bdSigSessionKey)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCookieInfoBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCookieInfoBussiness.Constructor">
            <summary>Sets the shim of CookieInfoBussiness.CookieInfoBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCookieInfoBussiness.GetFromDbByUserStringStringRefStringRef">
            <summary>Sets the shim of CookieInfoBussiness.GetFromDbByUser(String bdSigUser, String&amp; bdSigPortrait, String&amp; bdSigSessionKey)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimCookieInfoBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCookieInfoBussiness.AllInstances.AddCookieInfoStringStringString">
            <summary>Sets the shim of CookieInfoBussiness.AddCookieInfo(String bdSigUser, String bdSigPortrait, String bdSigSessionKey)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCookieInfoBussiness.AllInstances.GetFromDbByUserStringStringRefStringRef">
            <summary>Sets the shim of CookieInfoBussiness.GetFromDbByUser(String bdSigUser, String&amp; bdSigPortrait, String&amp; bdSigSessionKey)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimCountBussiness">
            <summary>Shim type of Bussiness.CountBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCountBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCountBussiness.#ctor(Bussiness.CountBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCountBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimCountBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.AppIDGet">
            <summary>Sets the shim of CountBussiness.get_AppID()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.ConnectionStringGet">
            <summary>Sets the shim of CountBussiness.get_ConnectionString()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.Constructor">
            <summary>Sets the shim of CountBussiness.CountBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.CountRecordGet">
            <summary>Sets the shim of CountBussiness.get_CountRecord()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertContentCountDictionaryOfStringString">
            <summary>Sets the shim of CountBussiness.InsertContentCount(Dictionary`2&lt;String,String&gt; clientInfos)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertGameInfoDateTimeInt32Int32Int32String">
            <summary>Sets the shim of CountBussiness.InsertGameInfo(DateTime begin, Int32 mapID, Int32 money, Int32 gold, String users)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertGameInfoInt32Int32Int32DateTimeDateTimeInt32Int32Int32Int32String">
            <summary>Sets the shim of CountBussiness.InsertGameInfo(Int32 appid, Int32 subid, Int32 serverid, DateTime begin, DateTime end, Int32 usercount, Int32 mapID, Int32 money, Int32 gold, String users)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertServerInfoInt32Int32">
            <summary>Sets the shim of CountBussiness.InsertServerInfo(Int32 usercount, Int32 gamecount)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertServerInfoInt32Int32Int32Int32Int32DateTime">
            <summary>Sets the shim of CountBussiness.InsertServerInfo(Int32 appid, Int32 subid, Int32 serverid, Int32 usercount, Int32 gamecount, DateTime time)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertSystemPayCountInt32Int32Int32Int32Int32">
            <summary>Sets the shim of CountBussiness.InsertSystemPayCount(Int32 consumerid, Int32 money, Int32 gold, Int32 consumertype, Int32 subconsumertype)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.InsertSystemPayCountInt32Int32Int32Int32Int32Int32Int32DateTime">
            <summary>Sets the shim of CountBussiness.InsertSystemPayCount(Int32 appid, Int32 subid, Int32 consumerid, Int32 money, Int32 gold, Int32 consumertype, Int32 subconsumertype, DateTime datime)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.ServerIDGet">
            <summary>Sets the shim of CountBussiness.get_ServerID()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.SetConfigStringInt32Int32Int32Boolean">
            <summary>Sets the shim of CountBussiness.SetConfig(String connectionString, Int32 appID, Int32 subID, Int32 serverID, Boolean countRecord)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.StaticConstructor">
            <summary>Sets the shim of CountBussiness.CountBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimCountBussiness.SubIDGet">
            <summary>Sets the shim of CountBussiness.get_SubID()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimCountBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimGameProperties">
            <summary>Shim type of Bussiness.GameProperties</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimGameProperties.#ctor(Bussiness.GameProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimGameProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimGameProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.ConsortiaStrengExpInt32">
            <summary>Sets the shim of GameProperties.ConsortiaStrengExp(Int32 Lv)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.Constructor">
            <summary>Sets the shim of GameProperties.GameProperties()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.HoleLevelUpExpInt32">
            <summary>Sets the shim of GameProperties.HoleLevelUpExp(Int32 lv)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.LimitInt32">
            <summary>Sets the shim of GameProperties.Limit(Int32 index)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.LoadPropertyConfigPropertyAttributeServiceBussiness">
            <summary>Sets the shim of GameProperties.LoadProperty(ConfigPropertyAttribute attrib, ServiceBussiness sb)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.Refresh">
            <summary>Sets the shim of GameProperties.Refresh()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.RuneExp">
            <summary>Sets the shim of GameProperties.RuneExp()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.Save">
            <summary>Sets the shim of GameProperties.Save()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.SavePropertyConfigPropertyAttributeServiceBussinessObject">
            <summary>Sets the shim of GameProperties.SaveProperty(ConfigPropertyAttribute attrib, ServiceBussiness sb, Object value)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.StaticConstructor">
            <summary>Sets the shim of GameProperties.GameProperties()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.VIPExp">
            <summary>Sets the shim of GameProperties.VIPExp()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.VIPStrengthenExpInt32">
            <summary>Sets the shim of GameProperties.VIPStrengthenExp(Int32 vipLv)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimGameProperties.getPropString">
            <summary>Sets the shim of GameProperties.getProp(String prop)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimGameProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimIniReader">
            <summary>Shim type of Bussiness.IniReader</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimIniReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimIniReader.#ctor(Bussiness.IniReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimIniReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimIniReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimIniReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimIniReader.ConstructorString">
            <summary>Sets the shim of IniReader.IniReader(String _FilePath)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimIniReader.GetIniStringStringString">
            <summary>Sets the shim of IniReader.GetIniString(String Section, String Key)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimIniReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimIniReader.AllInstances.GetIniStringStringString">
            <summary>Sets the shim of IniReader.GetIniString(String Section, String Key)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimItemRecordBussiness">
            <summary>Shim type of Bussiness.ItemRecordBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimItemRecordBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimItemRecordBussiness.#ctor(Bussiness.ItemRecordBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimItemRecordBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimItemRecordBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimItemRecordBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.Constructor">
            <summary>Sets the shim of ItemRecordBussiness.ItemRecordBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.FusionItemItemInfoStringRef">
            <summary>Sets the shim of ItemRecordBussiness.FusionItem(ItemInfo item, String&amp; Property)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.LogDropItemDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogDropItemDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.LogFightDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogFightDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.LogItemDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogItemDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.LogMoneyDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogMoneyDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.LogServerDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogServerDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.PropertyStringItemInfoStringRef">
            <summary>Sets the shim of ItemRecordBussiness.PropertyString(ItemInfo item, String&amp; Property)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.FusionItemItemInfoStringRef">
            <summary>Sets the shim of ItemRecordBussiness.FusionItem(ItemInfo item, String&amp; Property)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.LogDropItemDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogDropItemDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.LogFightDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogFightDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.LogItemDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogItemDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.LogMoneyDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogMoneyDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.LogServerDbDataTable">
            <summary>Sets the shim of ItemRecordBussiness.LogServerDb(DataTable dt)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimItemRecordBussiness.AllInstances.PropertyStringItemInfoStringRef">
            <summary>Sets the shim of ItemRecordBussiness.PropertyString(ItemInfo item, String&amp; Property)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimLanguageMgr">
            <summary>Shim type of Bussiness.LanguageMgr</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimLanguageMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimLanguageMgr.#ctor(Bussiness.LanguageMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimLanguageMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimLanguageMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.Constructor">
            <summary>Sets the shim of LanguageMgr.LanguageMgr()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.GetTranslationStringObjectArray">
            <summary>Sets the shim of LanguageMgr.GetTranslation(String translateId, Object[] args)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.LanguageFileGet">
            <summary>Sets the shim of LanguageMgr.get_LanguageFile()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.LoadLanguageString">
            <summary>Sets the shim of LanguageMgr.LoadLanguage(String path)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.ReloadString">
            <summary>Sets the shim of LanguageMgr.Reload(String path)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.SetupString">
            <summary>Sets the shim of LanguageMgr.Setup(String path)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimLanguageMgr.StaticConstructor">
            <summary>Sets the shim of LanguageMgr.LanguageMgr()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimLanguageMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimManageBussiness">
            <summary>Shim type of Bussiness.ManageBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimManageBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimManageBussiness.#ctor(Bussiness.ManageBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimManageBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimManageBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimManageBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.Constructor">
            <summary>Sets the shim of ManageBussiness.ManageBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerByNickNameStringDateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByNickName(String nickName, DateTime date, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerByNickNameStringDateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByNickName(String nickName, DateTime date, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerByUserIDInt32DateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserID(Int32 userID, DateTime date, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerByUserIDInt32DateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserID(Int32 userID, DateTime date, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerByUserNameStringDateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserName(String userName, DateTime date, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerByUserNameStringDateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserName(String userName, DateTime date, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerStringStringInt32DateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayer(String userName, String nickName, Int32 userID, DateTime forbidDate, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ForbidPlayerStringStringInt32DateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayer(String userName, String nickName, Int32 userID, DateTime forbidDate, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.GetConfigStateInt32">
            <summary>Sets the shim of ManageBussiness.GetConfigState(Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.KitoffUserByNickNameStringString">
            <summary>Sets the shim of ManageBussiness.KitoffUserByNickName(String name, String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.KitoffUserByUserNameStringString">
            <summary>Sets the shim of ManageBussiness.KitoffUserByUserName(String name, String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.KitoffUserInt32String">
            <summary>Sets the shim of ManageBussiness.KitoffUser(Int32 id, String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ReLoadServerList">
            <summary>Sets the shim of ManageBussiness.ReLoadServerList()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.ReloadString">
            <summary>Sets the shim of ManageBussiness.Reload(String type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.SystemNoticeString">
            <summary>Sets the shim of ManageBussiness.SystemNotice(String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.UpdateConfigStateInt32Boolean">
            <summary>Sets the shim of ManageBussiness.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimManageBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerByNickNameStringDateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByNickName(String nickName, DateTime date, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerByNickNameStringDateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByNickName(String nickName, DateTime date, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerByUserIDInt32DateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserID(Int32 userID, DateTime date, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerByUserIDInt32DateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserID(Int32 userID, DateTime date, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerByUserNameStringDateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserName(String userName, DateTime date, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerByUserNameStringDateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayerByUserName(String userName, DateTime date, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerStringStringInt32DateTimeBoolean">
            <summary>Sets the shim of ManageBussiness.ForbidPlayer(String userName, String nickName, Int32 userID, DateTime forbidDate, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ForbidPlayerStringStringInt32DateTimeBooleanString">
            <summary>Sets the shim of ManageBussiness.ForbidPlayer(String userName, String nickName, Int32 userID, DateTime forbidDate, Boolean isExist, String ForbidReason)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.GetConfigStateInt32">
            <summary>Sets the shim of ManageBussiness.GetConfigState(Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.KitoffUserByNickNameStringString">
            <summary>Sets the shim of ManageBussiness.KitoffUserByNickName(String name, String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.KitoffUserByUserNameStringString">
            <summary>Sets the shim of ManageBussiness.KitoffUserByUserName(String name, String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.KitoffUserInt32String">
            <summary>Sets the shim of ManageBussiness.KitoffUser(Int32 id, String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ReLoadServerList">
            <summary>Sets the shim of ManageBussiness.ReLoadServerList()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.ReloadString">
            <summary>Sets the shim of ManageBussiness.Reload(String type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.SystemNoticeString">
            <summary>Sets the shim of ManageBussiness.SystemNotice(String msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimManageBussiness.AllInstances.UpdateConfigStateInt32Boolean">
            <summary>Sets the shim of ManageBussiness.UpdateConfigState(Int32 type, Boolean state)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimMapBussiness">
            <summary>Shim type of Bussiness.MapBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMapBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMapBussiness.#ctor(Bussiness.MapBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMapBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMapBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMapBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMapBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMapBussiness.Constructor">
            <summary>Sets the shim of MapBussiness.MapBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMapBussiness.GetAllMap">
            <summary>Sets the shim of MapBussiness.GetAllMap()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMapBussiness.GetAllServerMap">
            <summary>Sets the shim of MapBussiness.GetAllServerMap()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimMapBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMapBussiness.AllInstances.GetAllMap">
            <summary>Sets the shim of MapBussiness.GetAllMap()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMapBussiness.AllInstances.GetAllServerMap">
            <summary>Sets the shim of MapBussiness.GetAllServerMap()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimMemberShipBussiness">
            <summary>Shim type of Bussiness.MemberShipBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMemberShipBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMemberShipBussiness.#ctor(Bussiness.MemberShipBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMemberShipBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMemberShipBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimMemberShipBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.CheckAdminString">
            <summary>Sets the shim of MemberShipBussiness.CheckAdmin(String username)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.CheckUsernameStringStringString">
            <summary>Sets the shim of MemberShipBussiness.CheckUsername(String applicationname, String username, String password)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.Constructor">
            <summary>Sets the shim of MemberShipBussiness.MemberShipBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.CreateUsernameStringStringStringStringStringStringBoolean">
            <summary>Sets the shim of MemberShipBussiness.CreateUsername(String applicationname, String username, String password, String email, String passwordformat, String passwordsalt, Boolean usersex)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.Dispose">
            <summary>Sets the shim of MemberShipBussiness.Dispose()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.ExistsUsernameString">
            <summary>Sets the shim of MemberShipBussiness.ExistsUsername(String username)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.StaticConstructor">
            <summary>Sets the shim of MemberShipBussiness.MemberShipBussiness()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimMemberShipBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.AllInstances.CheckAdminString">
            <summary>Sets the shim of MemberShipBussiness.CheckAdmin(String username)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.AllInstances.CheckUsernameStringStringString">
            <summary>Sets the shim of MemberShipBussiness.CheckUsername(String applicationname, String username, String password)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.AllInstances.CreateUsernameStringStringStringStringStringStringBoolean">
            <summary>Sets the shim of MemberShipBussiness.CreateUsername(String applicationname, String username, String password, String email, String passwordformat, String passwordsalt, Boolean usersex)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.AllInstances.Dispose">
            <summary>Sets the shim of MemberShipBussiness.Dispose()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimMemberShipBussiness.AllInstances.ExistsUsernameString">
            <summary>Sets the shim of MemberShipBussiness.ExistsUsername(String username)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimOrderBussiness">
            <summary>Shim type of Bussiness.OrderBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimOrderBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimOrderBussiness.#ctor(Bussiness.OrderBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimOrderBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimOrderBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimOrderBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimOrderBussiness.AddOrderStringDoubleStringStringString">
            <summary>Sets the shim of OrderBussiness.AddOrder(String order, Double amount, String username, String payWay, String serverId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimOrderBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimOrderBussiness.Constructor">
            <summary>Sets the shim of OrderBussiness.OrderBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimOrderBussiness.GetOrderToNameStringStringRef">
            <summary>Sets the shim of OrderBussiness.GetOrderToName(String order, String&amp; serverId)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimOrderBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimOrderBussiness.AllInstances.AddOrderStringDoubleStringStringString">
            <summary>Sets the shim of OrderBussiness.AddOrder(String order, Double amount, String username, String payWay, String serverId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimOrderBussiness.AllInstances.GetOrderToNameStringStringRef">
            <summary>Sets the shim of OrderBussiness.GetOrderToName(String order, String&amp; serverId)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimPlayerBussiness">
            <summary>Shim type of Bussiness.PlayerBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPlayerBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPlayerBussiness.#ctor(Bussiness.PlayerBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPlayerBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPlayerBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPlayerBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddAuctionAuctionInfo">
            <summary>Sets the shim of PlayerBussiness.AddAuction(AuctionInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddCardsUsersCardInfo">
            <summary>Sets the shim of PlayerBussiness.AddCards(UsersCardInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddFarmUserFarmInfo">
            <summary>Sets the shim of PlayerBussiness.AddFarm(UserFarmInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddFieldsUserFieldInfo">
            <summary>Sets the shim of PlayerBussiness.AddFields(UserFieldInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddFriendsFriendInfo">
            <summary>Sets the shim of PlayerBussiness.AddFriends(FriendInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddGoodsItemInfo">
            <summary>Sets the shim of PlayerBussiness.AddGoods(ItemInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddMarryInfoMarryInfo">
            <summary>Sets the shim of PlayerBussiness.AddMarryInfo(MarryInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddTreasureDataTreasureDataInfo">
            <summary>Sets the shim of PlayerBussiness.AddTreasureData(TreasureDataInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserAdoptPetUsersPetinfoBoolean">
            <summary>Sets the shim of PlayerBussiness.AddUserAdoptPet(UsersPetinfo info, Boolean isUse)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserGemStoneUserGemStone">
            <summary>Sets the shim of PlayerBussiness.AddUserGemStone(UserGemStone item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserLabyrinthUserLabyrinthInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserLabyrinth(UserLabyrinthInfo laby)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserPetUsersPetinfo">
            <summary>Sets the shim of PlayerBussiness.AddUserPet(UsersPetinfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserRankUserRankInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserRank(UserRankInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserTreasureInfoUserTreasureInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserTreasureInfo(UserTreasureInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddUserUserDrillUserDrillInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserUserDrill(UserDrillInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AddeqPetPetEquipDataInfo">
            <summary>Sets the shim of PlayerBussiness.AddeqPet(PetEquipDataInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.CancelPaymentMailInt32Int32Int32Ref">
            <summary>Sets the shim of PlayerBussiness.CancelPaymentMail(Int32 userid, Int32 mailID, Int32&amp; senderID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.CheckEmailIsValidString">
            <summary>Sets the shim of PlayerBussiness.CheckEmailIsValid(String Email)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.ClearAdoptPetInt32">
            <summary>Sets the shim of PlayerBussiness.ClearAdoptPet(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.Constructor">
            <summary>Sets the shim of PlayerBussiness.PlayerBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DeleteAllFieldsInt32">
            <summary>Sets the shim of PlayerBussiness.DeleteAllFields(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DeleteAuctionInt32Int32StringRef">
            <summary>Sets the shim of PlayerBussiness.DeleteAuction(Int32 auctionID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DeleteFriendsInt32Int32">
            <summary>Sets the shim of PlayerBussiness.DeleteFriends(Int32 UserID, Int32 FriendID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DeleteGoodsInt32">
            <summary>Sets the shim of PlayerBussiness.DeleteGoods(Int32 itemID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DeleteMailInt32Int32Int32Out">
            <summary>Sets the shim of PlayerBussiness.DeleteMail(Int32 UserID, Int32 mailID, Int32&amp; senderID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DeleteMarryInfoInt32Int32StringRef">
            <summary>Sets the shim of PlayerBussiness.DeleteMarryInfo(Int32 ID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DisableUserStringBoolean">
            <summary>Sets the shim of PlayerBussiness.DisableUser(String userName, Boolean isExit)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.DisposeMarryRoomInfoInt32">
            <summary>Sets the shim of PlayerBussiness.DisposeMarryRoomInfo(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAdoptPetSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetAdoptPetSingle(Int32 PetID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllCardGrooveUpdate">
            <summary>Sets the shim of PlayerBussiness.GetAllCardGrooveUpdate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllCardTemplate">
            <summary>Sets the shim of PlayerBussiness.GetAllCardTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllExercise">
            <summary>Sets the shim of PlayerBussiness.GetAllExercise()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllFightSpiritTemplate">
            <summary>Sets the shim of PlayerBussiness.GetAllFightSpiritTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllLevel">
            <summary>Sets the shim of PlayerBussiness.GetAllLevel()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllMemberByConsortiaInt32">
            <summary>Sets the shim of PlayerBussiness.GetAllMemberByConsortia(Int32 ConsortiaID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetConfig">
            <summary>Sets the shim of PlayerBussiness.GetAllPetConfig()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetExpItemPriceInfoInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetExpItemPriceInfoInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetLevel">
            <summary>Sets the shim of PlayerBussiness.GetAllPetLevel()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetSkillElementInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetSkillElementInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetSkillInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetSkillInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetSkillTemplateInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetSkillTemplateInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllPetTemplateInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetTemplateInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllTotem">
            <summary>Sets the shim of PlayerBussiness.GetAllTotem()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllTotemHonorTemplate">
            <summary>Sets the shim of PlayerBussiness.GetAllTotemHonorTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAllTreasureAward">
            <summary>Sets the shim of PlayerBussiness.GetAllTreasureAward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetAuctionSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetAuctionSingle(Int32 auctionID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetCelebByDayBestEquip">
            <summary>Sets the shim of PlayerBussiness.GetCelebByDayBestEquip()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetChargeRecordInfoDateTimeInt32">
            <summary>Sets the shim of PlayerBussiness.GetChargeRecordInfo(DateTime date, Int32 SaveRecordSecond)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetEqPetSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetEqPetSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetExerciseSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetExerciseSingle(Int32 Grade)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetFriendsAllInt32">
            <summary>Sets the shim of PlayerBussiness.GetFriendsAll(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetFriendsBbsString">
            <summary>Sets the shim of PlayerBussiness.GetFriendsBbs(String condictArray)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetFriendsGoodString">
            <summary>Sets the shim of PlayerBussiness.GetFriendsGood(String UserName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetFriendsIDAllInt32">
            <summary>Sets the shim of PlayerBussiness.GetFriendsIDAll(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetHotSpringRoomInfo">
            <summary>Sets the shim of PlayerBussiness.GetHotSpringRoomInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetHotSpringRoomInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetHotSpringRoomInfoSingle(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMailBySenderIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetMailBySenderID(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMailByUserIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetMailByUserID(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMailSingleInt32Int32">
            <summary>Sets the shim of PlayerBussiness.GetMailSingle(Int32 UserID, Int32 mailID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMarryInfoPageInt32StringBooleanInt32Int32Ref">
            <summary>Sets the shim of PlayerBussiness.GetMarryInfoPage(Int32 page, String name, Boolean sex, Int32 size, Int32&amp; total)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMarryInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetMarryInfoSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMarryPropInt32">
            <summary>Sets the shim of PlayerBussiness.GetMarryProp(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMarryRoomInfo">
            <summary>Sets the shim of PlayerBussiness.GetMarryRoomInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetMarryRoomInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetMarryRoomInfoSingle(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetPlayerDrillByIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetPlayerDrillByID(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetPlayerMarryApplyInt32">
            <summary>Sets the shim of PlayerBussiness.GetPlayerMarryApply(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleFarmInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleFarm(Int32 Id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleFieldsInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleFields(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleGemStonesInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleGemStones(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleLabyrinthInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleLabyrinth(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleTreasureDataInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleTreasureData(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleTreasureInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleTreasure(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetSingleUserRankInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleUserRank(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserAdoptPetSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserAdoptPetSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserBagByTypeInt32Int32">
            <summary>Sets the shim of PlayerBussiness.GetUserBagByType(Int32 UserID, Int32 bagType)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserBeadEuqipInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserBeadEuqip(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserBufferInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserBuffer(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserCardByPlaceInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserCardByPlace(Int32 Place)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserCardEuqipInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserCardEuqip(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserCardSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserCardSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserEuqipByNickString">
            <summary>Sets the shim of PlayerBussiness.GetUserEuqipByNick(String Nick)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserEuqipInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserEuqip(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserInfoInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserInfo(Int32 UserId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserItemInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserItem(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserItemSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserItemSingle(Int32 itemID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserLevelSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserLevelSingle(Int32 Grade)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserLoginListString">
            <summary>Sets the shim of PlayerBussiness.GetUserLoginList(String userName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserPetIsExitSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserPetIsExitSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserPetSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserPetSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserPetSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserPetSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserQuestInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserQuest(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserSingleByNickNameString">
            <summary>Sets the shim of PlayerBussiness.GetUserSingleByNickName(String nickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserSingleByUserIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserSingleByUserID(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserSingleByUserNameString">
            <summary>Sets the shim of PlayerBussiness.GetUserSingleByUserName(String userName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.GetUserTexpInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserTexpInfoSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitAuctionInfoSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitAuctionInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitCardGrooveUpdateSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitCardGrooveUpdate(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitCardSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitCard(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitCardTemplateSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitCardTemplate(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitConsortiaUserInfoSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitConsortiaUserInfo(SqlDataReader dr)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitItemSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitItem(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitMailSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitMail(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitPetSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitPet(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InitPlayerInfoSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitPlayerInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InsertMarryRoomInfoMarryRoomInfo">
            <summary>Sets the shim of PlayerBussiness.InsertMarryRoomInfo(MarryRoomInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InsertPlayerMarryApplyMarryApplyInfo">
            <summary>Sets the shim of PlayerBussiness.InsertPlayerMarryApply(MarryApplyInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.InsertUserTexpInfoTexpInfo">
            <summary>Sets the shim of PlayerBussiness.InsertUserTexpInfo(TexpInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.LoginGameStringString">
            <summary>Sets the shim of PlayerBussiness.LoginGame(String username, String password)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.ReLoadPlayerInt32">
            <summary>Sets the shim of PlayerBussiness.ReLoadPlayer(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RegisterUserInfoUserInfo">
            <summary>Sets the shim of PlayerBussiness.RegisterUserInfo(UserInfo userinfo)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RegisterUserStringStringStringBooleanInt32Int32Int32">
            <summary>Sets the shim of PlayerBussiness.RegisterUser(String UserName, String NickName, String Password, Boolean Sex, Int32 Money, Int32 GiftToken, Int32 Gold)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RemoveIsArrangeInt32">
            <summary>Sets the shim of PlayerBussiness.RemoveIsArrange(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RemoveTreasureDataByUserInt32">
            <summary>Sets the shim of PlayerBussiness.RemoveTreasureDataByUser(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RemoveUserAdoptPetInt32">
            <summary>Sets the shim of PlayerBussiness.RemoveUserAdoptPet(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RemoveUserPetUsersPetinfo">
            <summary>Sets the shim of PlayerBussiness.RemoveUserPet(UsersPetinfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RenameNickStringStringString">
            <summary>Sets the shim of PlayerBussiness.RenameNick(String userName, String nickName, String newNickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.RenameNickStringStringStringStringRef">
            <summary>Sets the shim of PlayerBussiness.RenameNick(String userName, String nickName, String newNickName, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SaveBufferBufferInfo">
            <summary>Sets the shim of PlayerBussiness.SaveBuffer(BufferInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SavePlayerMarryNoticeMarryApplyInfoInt32Int32Ref">
            <summary>Sets the shim of PlayerBussiness.SavePlayerMarryNotice(MarryApplyInfo info, Int32 answerId, Int32&amp; id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.ScanAuctionStringRef">
            <summary>Sets the shim of PlayerBussiness.ScanAuction(String&amp; noticeUserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.ScanMailStringRef">
            <summary>Sets the shim of PlayerBussiness.ScanMail(String&amp; noticeUserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemByNickNameStringStringStringInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByNickName(String title, String content, String NickName, Int32 templateID, Int32 count, Int32 validDate, Int32 gold, Int32 money, Int32 StrengthenLevel, Int32 AttackCompose, Int32 DefendCompose, Int32 AgilityCompose, Int32 LuckCompose, Boolean isBinds)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemByNickNameStringStringStringInt32Int32String">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByNickName(String title, String content, String nickName, Int32 gold, Int32 money, String param)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemByUserNameStringStringStringInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByUserName(String title, String content, String userName, Int32 templateID, Int32 count, Int32 validDate, Int32 gold, Int32 money, Int32 StrengthenLevel, Int32 AttackCompose, Int32 DefendCompose, Int32 AgilityCompose, Int32 LuckCompose, Boolean isBinds)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemByUserNameStringStringStringInt32Int32String">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByUserName(String title, String content, String userName, Int32 gold, Int32 money, String param)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemMailInfoItemInfoInt32Ref">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItem(MailInfo mail, ItemInfo item, Int32&amp; returnValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemStringStringInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItem(String title, String content, Int32 UserID, Int32 templateID, Int32 count, Int32 validDate, Int32 gold, Int32 money, Int32 StrengthenLevel, Int32 AttackCompose, Int32 DefendCompose, Int32 AgilityCompose, Int32 LuckCompose, Boolean isBinds)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndItemStringStringInt32Int32Int32String">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItem(String title, String content, Int32 userID, Int32 gold, Int32 money, String param)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailAndMoneyMailInfoInt32Ref">
            <summary>Sets the shim of PlayerBussiness.SendMailAndMoney(MailInfo mail, Int32&amp; returnValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.SendMailMailInfo">
            <summary>Sets the shim of PlayerBussiness.SendMail(MailInfo mail)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.TankAll">
            <summary>Sets the shim of PlayerBussiness.TankAll()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.TestString">
            <summary>Sets the shim of PlayerBussiness.Test(String DutyName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateAuctionAuctionInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateAuction(AuctionInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateBreakTimeWhereServerStop">
            <summary>Sets the shim of PlayerBussiness.UpdateBreakTimeWhereServerStop()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateCardsUsersCardInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateCards(UsersCardInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateDbQuestDataInfoQuestDataInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateDbQuestDataInfo(QuestDataInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateFarmUserFarmInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateFarm(UserFarmInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateFieldsUserFieldInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateFields(UserFieldInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateFriendHelpTimesInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateFriendHelpTimes(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateGemStoneInfoUserGemStone">
            <summary>Sets the shim of PlayerBussiness.UpdateGemStoneInfo(UserGemStone g)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateGoodsItemInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateGoods(ItemInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateHotSpringRoomInfoHotSpringRoomInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateHotSpringRoomInfo(HotSpringRoomInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateLabyrinthInfoUserLabyrinthInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateLabyrinthInfo(UserLabyrinthInfo laby)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateLastVIPPackTimeInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateLastVIPPackTime(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateMailMailInfoInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateMail(MailInfo mail, Int32 oldMoney)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateMarryInfoMarryInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateMarryInfo(MarryInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateMarryRoomInfoMarryRoomInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateMarryRoomInfo(MarryRoomInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePassWordInt32String">
            <summary>Sets the shim of PlayerBussiness.UpdatePassWord(Int32 userID, String password)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePasswordInfoInt32StringStringStringStringInt32">
            <summary>Sets the shim of PlayerBussiness.UpdatePasswordInfo(Int32 userID, String PasswordQuestion1, String PasswordAnswer1, String PasswordQuestion2, String PasswordAnswer2, Int32 Count)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePasswordTwoInt32String">
            <summary>Sets the shim of PlayerBussiness.UpdatePasswordTwo(Int32 userID, String passwordTwo)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePlayerGotRingPropInt32Int32">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerGotRingProp(Int32 groomID, Int32 brideID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePlayerLastAwardInt32Int32">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerLastAward(Int32 id, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePlayerMarryApplyInt32StringBoolean">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerMarryApply(Int32 UserID, String loveProclamation, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePlayerMarryPlayerInfo">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerMarry(PlayerInfo player)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdatePlayerPlayerInfo">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayer(PlayerInfo player)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateTreasureDataTreasureDataInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateTreasureData(TreasureDataInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateUserAdoptPetInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateUserAdoptPet(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateUserDrillInfoUserDrillInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserDrillInfo(UserDrillInfo g)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateUserPetUsersPetinfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserPet(UsersPetinfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateUserRankUserRankInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserRank(UserRankInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateUserTexpInfoTexpInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserTexpInfo(TexpInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateUserTreasureInfoUserTreasureInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserTreasureInfo(UserTreasureInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateVIPInfoPlayerInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateVIPInfo(PlayerInfo p)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.UpdateqPetPetEquipDataInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateqPet(PetEquipDataInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.VIPLastdateInt32">
            <summary>Sets the shim of PlayerBussiness.VIPLastdate(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.VIPRenewalStringInt32DateTimeRef">
            <summary>Sets the shim of PlayerBussiness.VIPRenewal(String nickName, Int32 renewalDays, DateTime&amp; ExpireDayOut)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimPlayerBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddAuctionAuctionInfo">
            <summary>Sets the shim of PlayerBussiness.AddAuction(AuctionInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddCardsUsersCardInfo">
            <summary>Sets the shim of PlayerBussiness.AddCards(UsersCardInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddFarmUserFarmInfo">
            <summary>Sets the shim of PlayerBussiness.AddFarm(UserFarmInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddFieldsUserFieldInfo">
            <summary>Sets the shim of PlayerBussiness.AddFields(UserFieldInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddFriendsFriendInfo">
            <summary>Sets the shim of PlayerBussiness.AddFriends(FriendInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddGoodsItemInfo">
            <summary>Sets the shim of PlayerBussiness.AddGoods(ItemInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddMarryInfoMarryInfo">
            <summary>Sets the shim of PlayerBussiness.AddMarryInfo(MarryInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddTreasureDataTreasureDataInfo">
            <summary>Sets the shim of PlayerBussiness.AddTreasureData(TreasureDataInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserAdoptPetUsersPetinfoBoolean">
            <summary>Sets the shim of PlayerBussiness.AddUserAdoptPet(UsersPetinfo info, Boolean isUse)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserGemStoneUserGemStone">
            <summary>Sets the shim of PlayerBussiness.AddUserGemStone(UserGemStone item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserLabyrinthUserLabyrinthInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserLabyrinth(UserLabyrinthInfo laby)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserPetUsersPetinfo">
            <summary>Sets the shim of PlayerBussiness.AddUserPet(UsersPetinfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserRankUserRankInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserRank(UserRankInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserTreasureInfoUserTreasureInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserTreasureInfo(UserTreasureInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddUserUserDrillUserDrillInfo">
            <summary>Sets the shim of PlayerBussiness.AddUserUserDrill(UserDrillInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.AddeqPetPetEquipDataInfo">
            <summary>Sets the shim of PlayerBussiness.AddeqPet(PetEquipDataInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.CancelPaymentMailInt32Int32Int32Ref">
            <summary>Sets the shim of PlayerBussiness.CancelPaymentMail(Int32 userid, Int32 mailID, Int32&amp; senderID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.CheckEmailIsValidString">
            <summary>Sets the shim of PlayerBussiness.CheckEmailIsValid(String Email)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.ClearAdoptPetInt32">
            <summary>Sets the shim of PlayerBussiness.ClearAdoptPet(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DeleteAllFieldsInt32">
            <summary>Sets the shim of PlayerBussiness.DeleteAllFields(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DeleteAuctionInt32Int32StringRef">
            <summary>Sets the shim of PlayerBussiness.DeleteAuction(Int32 auctionID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DeleteFriendsInt32Int32">
            <summary>Sets the shim of PlayerBussiness.DeleteFriends(Int32 UserID, Int32 FriendID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DeleteGoodsInt32">
            <summary>Sets the shim of PlayerBussiness.DeleteGoods(Int32 itemID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DeleteMailInt32Int32Int32Out">
            <summary>Sets the shim of PlayerBussiness.DeleteMail(Int32 UserID, Int32 mailID, Int32&amp; senderID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DeleteMarryInfoInt32Int32StringRef">
            <summary>Sets the shim of PlayerBussiness.DeleteMarryInfo(Int32 ID, Int32 userID, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DisableUserStringBoolean">
            <summary>Sets the shim of PlayerBussiness.DisableUser(String userName, Boolean isExit)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.DisposeMarryRoomInfoInt32">
            <summary>Sets the shim of PlayerBussiness.DisposeMarryRoomInfo(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAdoptPetSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetAdoptPetSingle(Int32 PetID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllCardGrooveUpdate">
            <summary>Sets the shim of PlayerBussiness.GetAllCardGrooveUpdate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllCardTemplate">
            <summary>Sets the shim of PlayerBussiness.GetAllCardTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllExercise">
            <summary>Sets the shim of PlayerBussiness.GetAllExercise()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllFightSpiritTemplate">
            <summary>Sets the shim of PlayerBussiness.GetAllFightSpiritTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllLevel">
            <summary>Sets the shim of PlayerBussiness.GetAllLevel()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllMemberByConsortiaInt32">
            <summary>Sets the shim of PlayerBussiness.GetAllMemberByConsortia(Int32 ConsortiaID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetConfig">
            <summary>Sets the shim of PlayerBussiness.GetAllPetConfig()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetExpItemPriceInfoInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetExpItemPriceInfoInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetLevel">
            <summary>Sets the shim of PlayerBussiness.GetAllPetLevel()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetSkillElementInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetSkillElementInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetSkillInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetSkillInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetSkillTemplateInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetSkillTemplateInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllPetTemplateInfo">
            <summary>Sets the shim of PlayerBussiness.GetAllPetTemplateInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllTotem">
            <summary>Sets the shim of PlayerBussiness.GetAllTotem()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllTotemHonorTemplate">
            <summary>Sets the shim of PlayerBussiness.GetAllTotemHonorTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAllTreasureAward">
            <summary>Sets the shim of PlayerBussiness.GetAllTreasureAward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetAuctionSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetAuctionSingle(Int32 auctionID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetCelebByDayBestEquip">
            <summary>Sets the shim of PlayerBussiness.GetCelebByDayBestEquip()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetChargeRecordInfoDateTimeInt32">
            <summary>Sets the shim of PlayerBussiness.GetChargeRecordInfo(DateTime date, Int32 SaveRecordSecond)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetEqPetSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetEqPetSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetExerciseSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetExerciseSingle(Int32 Grade)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetFriendsAllInt32">
            <summary>Sets the shim of PlayerBussiness.GetFriendsAll(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetFriendsBbsString">
            <summary>Sets the shim of PlayerBussiness.GetFriendsBbs(String condictArray)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetFriendsGoodString">
            <summary>Sets the shim of PlayerBussiness.GetFriendsGood(String UserName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetFriendsIDAllInt32">
            <summary>Sets the shim of PlayerBussiness.GetFriendsIDAll(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetHotSpringRoomInfo">
            <summary>Sets the shim of PlayerBussiness.GetHotSpringRoomInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetHotSpringRoomInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetHotSpringRoomInfoSingle(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMailBySenderIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetMailBySenderID(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMailByUserIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetMailByUserID(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMailSingleInt32Int32">
            <summary>Sets the shim of PlayerBussiness.GetMailSingle(Int32 UserID, Int32 mailID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMarryInfoPageInt32StringBooleanInt32Int32Ref">
            <summary>Sets the shim of PlayerBussiness.GetMarryInfoPage(Int32 page, String name, Boolean sex, Int32 size, Int32&amp; total)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMarryInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetMarryInfoSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMarryPropInt32">
            <summary>Sets the shim of PlayerBussiness.GetMarryProp(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMarryRoomInfo">
            <summary>Sets the shim of PlayerBussiness.GetMarryRoomInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetMarryRoomInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetMarryRoomInfoSingle(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetPlayerDrillByIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetPlayerDrillByID(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetPlayerMarryApplyInt32">
            <summary>Sets the shim of PlayerBussiness.GetPlayerMarryApply(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleFarmInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleFarm(Int32 Id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleFieldsInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleFields(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleGemStonesInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleGemStones(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleLabyrinthInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleLabyrinth(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleTreasureDataInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleTreasureData(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleTreasureInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleTreasure(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetSingleUserRankInt32">
            <summary>Sets the shim of PlayerBussiness.GetSingleUserRank(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserAdoptPetSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserAdoptPetSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserBagByTypeInt32Int32">
            <summary>Sets the shim of PlayerBussiness.GetUserBagByType(Int32 UserID, Int32 bagType)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserBeadEuqipInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserBeadEuqip(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserBufferInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserBuffer(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserCardByPlaceInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserCardByPlace(Int32 Place)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserCardEuqipInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserCardEuqip(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserCardSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserCardSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserEuqipByNickString">
            <summary>Sets the shim of PlayerBussiness.GetUserEuqipByNick(String Nick)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserEuqipInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserEuqip(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserInfoInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserInfo(Int32 UserId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserItemInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserItem(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserItemSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserItemSingle(Int32 itemID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserLevelSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserLevelSingle(Int32 Grade)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserLoginListString">
            <summary>Sets the shim of PlayerBussiness.GetUserLoginList(String userName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserPetIsExitSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserPetIsExitSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserPetSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserPetSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserPetSinglesInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserPetSingles(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserQuestInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserQuest(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserSingleByNickNameString">
            <summary>Sets the shim of PlayerBussiness.GetUserSingleByNickName(String nickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserSingleByUserIDInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserSingleByUserID(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserSingleByUserNameString">
            <summary>Sets the shim of PlayerBussiness.GetUserSingleByUserName(String userName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.GetUserTexpInfoSingleInt32">
            <summary>Sets the shim of PlayerBussiness.GetUserTexpInfoSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitAuctionInfoSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitAuctionInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitCardGrooveUpdateSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitCardGrooveUpdate(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitCardSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitCard(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitCardTemplateSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitCardTemplate(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitConsortiaUserInfoSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitConsortiaUserInfo(SqlDataReader dr)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitItemSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitItem(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitMailSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitMail(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitPetSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitPet(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InitPlayerInfoSqlDataReader">
            <summary>Sets the shim of PlayerBussiness.InitPlayerInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InsertMarryRoomInfoMarryRoomInfo">
            <summary>Sets the shim of PlayerBussiness.InsertMarryRoomInfo(MarryRoomInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InsertPlayerMarryApplyMarryApplyInfo">
            <summary>Sets the shim of PlayerBussiness.InsertPlayerMarryApply(MarryApplyInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.InsertUserTexpInfoTexpInfo">
            <summary>Sets the shim of PlayerBussiness.InsertUserTexpInfo(TexpInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.LoginGameStringString">
            <summary>Sets the shim of PlayerBussiness.LoginGame(String username, String password)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.ReLoadPlayerInt32">
            <summary>Sets the shim of PlayerBussiness.ReLoadPlayer(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RegisterUserInfoUserInfo">
            <summary>Sets the shim of PlayerBussiness.RegisterUserInfo(UserInfo userinfo)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RegisterUserStringStringStringBooleanInt32Int32Int32">
            <summary>Sets the shim of PlayerBussiness.RegisterUser(String UserName, String NickName, String Password, Boolean Sex, Int32 Money, Int32 GiftToken, Int32 Gold)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RemoveIsArrangeInt32">
            <summary>Sets the shim of PlayerBussiness.RemoveIsArrange(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RemoveTreasureDataByUserInt32">
            <summary>Sets the shim of PlayerBussiness.RemoveTreasureDataByUser(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RemoveUserAdoptPetInt32">
            <summary>Sets the shim of PlayerBussiness.RemoveUserAdoptPet(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RemoveUserPetUsersPetinfo">
            <summary>Sets the shim of PlayerBussiness.RemoveUserPet(UsersPetinfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RenameNickStringStringString">
            <summary>Sets the shim of PlayerBussiness.RenameNick(String userName, String nickName, String newNickName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.RenameNickStringStringStringStringRef">
            <summary>Sets the shim of PlayerBussiness.RenameNick(String userName, String nickName, String newNickName, String&amp; msg)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SaveBufferBufferInfo">
            <summary>Sets the shim of PlayerBussiness.SaveBuffer(BufferInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SavePlayerMarryNoticeMarryApplyInfoInt32Int32Ref">
            <summary>Sets the shim of PlayerBussiness.SavePlayerMarryNotice(MarryApplyInfo info, Int32 answerId, Int32&amp; id)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.ScanAuctionStringRef">
            <summary>Sets the shim of PlayerBussiness.ScanAuction(String&amp; noticeUserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.ScanMailStringRef">
            <summary>Sets the shim of PlayerBussiness.ScanMail(String&amp; noticeUserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemByNickNameStringStringStringInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByNickName(String title, String content, String NickName, Int32 templateID, Int32 count, Int32 validDate, Int32 gold, Int32 money, Int32 StrengthenLevel, Int32 AttackCompose, Int32 DefendCompose, Int32 AgilityCompose, Int32 LuckCompose, Boolean isBinds)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemByNickNameStringStringStringInt32Int32String">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByNickName(String title, String content, String nickName, Int32 gold, Int32 money, String param)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemByUserNameStringStringStringInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByUserName(String title, String content, String userName, Int32 templateID, Int32 count, Int32 validDate, Int32 gold, Int32 money, Int32 StrengthenLevel, Int32 AttackCompose, Int32 DefendCompose, Int32 AgilityCompose, Int32 LuckCompose, Boolean isBinds)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemByUserNameStringStringStringInt32Int32String">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItemByUserName(String title, String content, String userName, Int32 gold, Int32 money, String param)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemMailInfoItemInfoInt32Ref">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItem(MailInfo mail, ItemInfo item, Int32&amp; returnValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemStringStringInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItem(String title, String content, Int32 UserID, Int32 templateID, Int32 count, Int32 validDate, Int32 gold, Int32 money, Int32 StrengthenLevel, Int32 AttackCompose, Int32 DefendCompose, Int32 AgilityCompose, Int32 LuckCompose, Boolean isBinds)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndItemStringStringInt32Int32Int32String">
            <summary>Sets the shim of PlayerBussiness.SendMailAndItem(String title, String content, Int32 userID, Int32 gold, Int32 money, String param)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailAndMoneyMailInfoInt32Ref">
            <summary>Sets the shim of PlayerBussiness.SendMailAndMoney(MailInfo mail, Int32&amp; returnValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.SendMailMailInfo">
            <summary>Sets the shim of PlayerBussiness.SendMail(MailInfo mail)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.TankAll">
            <summary>Sets the shim of PlayerBussiness.TankAll()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.TestString">
            <summary>Sets the shim of PlayerBussiness.Test(String DutyName)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateAuctionAuctionInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateAuction(AuctionInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateBreakTimeWhereServerStop">
            <summary>Sets the shim of PlayerBussiness.UpdateBreakTimeWhereServerStop()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateCardsUsersCardInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateCards(UsersCardInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateDbQuestDataInfoQuestDataInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateDbQuestDataInfo(QuestDataInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateFarmUserFarmInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateFarm(UserFarmInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateFieldsUserFieldInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateFields(UserFieldInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateFriendHelpTimesInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateFriendHelpTimes(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateGemStoneInfoUserGemStone">
            <summary>Sets the shim of PlayerBussiness.UpdateGemStoneInfo(UserGemStone g)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateGoodsItemInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateGoods(ItemInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateHotSpringRoomInfoHotSpringRoomInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateHotSpringRoomInfo(HotSpringRoomInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateLabyrinthInfoUserLabyrinthInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateLabyrinthInfo(UserLabyrinthInfo laby)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateLastVIPPackTimeInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateLastVIPPackTime(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateMailMailInfoInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateMail(MailInfo mail, Int32 oldMoney)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateMarryInfoMarryInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateMarryInfo(MarryInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateMarryRoomInfoMarryRoomInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateMarryRoomInfo(MarryRoomInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePassWordInt32String">
            <summary>Sets the shim of PlayerBussiness.UpdatePassWord(Int32 userID, String password)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePasswordInfoInt32StringStringStringStringInt32">
            <summary>Sets the shim of PlayerBussiness.UpdatePasswordInfo(Int32 userID, String PasswordQuestion1, String PasswordAnswer1, String PasswordQuestion2, String PasswordAnswer2, Int32 Count)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePasswordTwoInt32String">
            <summary>Sets the shim of PlayerBussiness.UpdatePasswordTwo(Int32 userID, String passwordTwo)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePlayerGotRingPropInt32Int32">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerGotRingProp(Int32 groomID, Int32 brideID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePlayerLastAwardInt32Int32">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerLastAward(Int32 id, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePlayerMarryApplyInt32StringBoolean">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerMarryApply(Int32 UserID, String loveProclamation, Boolean isExist)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePlayerMarryPlayerInfo">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayerMarry(PlayerInfo player)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdatePlayerPlayerInfo">
            <summary>Sets the shim of PlayerBussiness.UpdatePlayer(PlayerInfo player)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateTreasureDataTreasureDataInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateTreasureData(TreasureDataInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateUserAdoptPetInt32">
            <summary>Sets the shim of PlayerBussiness.UpdateUserAdoptPet(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateUserDrillInfoUserDrillInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserDrillInfo(UserDrillInfo g)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateUserPetUsersPetinfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserPet(UsersPetinfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateUserRankUserRankInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserRank(UserRankInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateUserTexpInfoTexpInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserTexpInfo(TexpInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateUserTreasureInfoUserTreasureInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateUserTreasureInfo(UserTreasureInfo item)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateVIPInfoPlayerInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateVIPInfo(PlayerInfo p)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.UpdateqPetPetEquipDataInfo">
            <summary>Sets the shim of PlayerBussiness.UpdateqPet(PetEquipDataInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.VIPLastdateInt32">
            <summary>Sets the shim of PlayerBussiness.VIPLastdate(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPlayerBussiness.AllInstances.VIPRenewalStringInt32DateTimeRef">
            <summary>Sets the shim of PlayerBussiness.VIPRenewal(String nickName, Int32 renewalDays, DateTime&amp; ExpireDayOut)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimProduceBussiness">
            <summary>Shim type of Bussiness.ProduceBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimProduceBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimProduceBussiness.#ctor(Bussiness.ProduceBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimProduceBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimProduceBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimProduceBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AddAASInfoAASInfo">
            <summary>Sets the shim of ProduceBussiness.AddAASInfo(AASInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AddDailyLogListDailyLogListInfo">
            <summary>Sets the shim of ProduceBussiness.AddDailyLogList(DailyLogListInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.Constructor">
            <summary>Sets the shim of ProduceBussiness.ProduceBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetALlAchievement">
            <summary>Sets the shim of ProduceBussiness.GetALlAchievement()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetALlAchievementCondition">
            <summary>Sets the shim of ProduceBussiness.GetALlAchievementCondition()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetALlAchievementReward">
            <summary>Sets the shim of ProduceBussiness.GetALlAchievementReward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetALlQuest">
            <summary>Sets the shim of ProduceBussiness.GetALlQuest()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetALllShop">
            <summary>Sets the shim of ProduceBussiness.GetALllShop()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetASSInfoSingleInt32">
            <summary>Sets the shim of ProduceBussiness.GetASSInfoSingle(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllAASInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllAASInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllAchievementDataInt32">
            <summary>Sets the shim of ProduceBussiness.GetAllAchievementData(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllActiveAwardInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllActiveAwardInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllActiveConditionInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllActiveConditionInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllAreaBigBugleRecord">
            <summary>Sets the shim of ProduceBussiness.GetAllAreaBigBugleRecord()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllBall">
            <summary>Sets the shim of ProduceBussiness.GetAllBall()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllBallConfig">
            <summary>Sets the shim of ProduceBussiness.GetAllBallConfig()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllCategory">
            <summary>Sets the shim of ProduceBussiness.GetAllCategory()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllDailyAward">
            <summary>Sets the shim of ProduceBussiness.GetAllDailyAward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllDropCondictions">
            <summary>Sets the shim of ProduceBussiness.GetAllDropCondictions()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllDropItems">
            <summary>Sets the shim of ProduceBussiness.GetAllDropItems()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllFusion">
            <summary>Sets the shim of ProduceBussiness.GetAllFusion()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllFusionDesc">
            <summary>Sets the shim of ProduceBussiness.GetAllFusionDesc()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllGoldEquipTemplateLoad">
            <summary>Sets the shim of ProduceBussiness.GetAllGoldEquipTemplateLoad()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllGoods">
            <summary>Sets the shim of ProduceBussiness.GetAllGoods()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllGoodsASC">
            <summary>Sets the shim of ProduceBussiness.GetAllGoodsASC()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllItemRecordType">
            <summary>Sets the shim of ProduceBussiness.GetAllItemRecordType()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllMissionInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllMissionInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllNPCInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllNPCInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllProp">
            <summary>Sets the shim of ProduceBussiness.GetAllProp()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllQuestCondiction">
            <summary>Sets the shim of ProduceBussiness.GetAllQuestCondiction()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllQuestGoods">
            <summary>Sets the shim of ProduceBussiness.GetAllQuestGoods()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllQuestRate">
            <summary>Sets the shim of ProduceBussiness.GetAllQuestRate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllRefineryInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllRefineryInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllRefineryStrengthen">
            <summary>Sets the shim of ProduceBussiness.GetAllRefineryStrengthen()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllRuneTemplate">
            <summary>Sets the shim of ProduceBussiness.GetAllRuneTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllShopGoodsShowList">
            <summary>Sets the shim of ProduceBussiness.GetAllShopGoodsShowList()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllStrengThenExp">
            <summary>Sets the shim of ProduceBussiness.GetAllStrengThenExp()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllStrengthen">
            <summary>Sets the shim of ProduceBussiness.GetAllStrengthen()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllStrengthenGoodsInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllStrengthenGoodsInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetAllTimeBoxAward">
            <summary>Sets the shim of ProduceBussiness.GetAllTimeBoxAward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetDailyLogListSingleInt32">
            <summary>Sets the shim of ProduceBussiness.GetDailyLogListSingle(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetFusionType">
            <summary>Sets the shim of ProduceBussiness.GetFusionType()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetItemBoxInfos">
            <summary>Sets the shim of ProduceBussiness.GetItemBoxInfos()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetSingleCategoryInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleCategory(Int32 CategoryID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetSingleGoodsInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleGoods(Int32 goodsID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetSingleItemsBoxInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleItemsBox(Int32 DataID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.GetSingleQuestInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleQuest(Int32 questID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitAchievementConditionSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievementCondition(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitAchievementDataSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievementData(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitAchievementRewardSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievementReward(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitAchievementSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievement(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitDropCondictionSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitDropCondiction(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitDropItemSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitDropItem(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitGoldEquipTemplateLoadSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitGoldEquipTemplateLoad(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitItemBoxInfoSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitItemBoxInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitItemRecordTypeSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitItemRecordType(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitItemTemplateInfoSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitItemTemplateInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitQuestCondictionSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuestCondiction(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitQuestGoodsSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuestGoods(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitQuestRateSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuestRate(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitQuestSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuest(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.InitShopGoodsShowListInfoSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitShopGoodsShowListInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.UpdateDailyLogListDailyLogListInfo">
            <summary>Sets the shim of ProduceBussiness.UpdateDailyLogList(DailyLogListInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.UpdatePlayerInfoHistoryPlayerInfoHistory">
            <summary>Sets the shim of ProduceBussiness.UpdatePlayerInfoHistory(PlayerInfoHistory info)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimProduceBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.AddAASInfoAASInfo">
            <summary>Sets the shim of ProduceBussiness.AddAASInfo(AASInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.AddDailyLogListDailyLogListInfo">
            <summary>Sets the shim of ProduceBussiness.AddDailyLogList(DailyLogListInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetALlAchievement">
            <summary>Sets the shim of ProduceBussiness.GetALlAchievement()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetALlAchievementCondition">
            <summary>Sets the shim of ProduceBussiness.GetALlAchievementCondition()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetALlAchievementReward">
            <summary>Sets the shim of ProduceBussiness.GetALlAchievementReward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetALlQuest">
            <summary>Sets the shim of ProduceBussiness.GetALlQuest()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetALllShop">
            <summary>Sets the shim of ProduceBussiness.GetALllShop()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetASSInfoSingleInt32">
            <summary>Sets the shim of ProduceBussiness.GetASSInfoSingle(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllAASInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllAASInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllAchievementDataInt32">
            <summary>Sets the shim of ProduceBussiness.GetAllAchievementData(Int32 userID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllActiveAwardInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllActiveAwardInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllActiveConditionInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllActiveConditionInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllAreaBigBugleRecord">
            <summary>Sets the shim of ProduceBussiness.GetAllAreaBigBugleRecord()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllBall">
            <summary>Sets the shim of ProduceBussiness.GetAllBall()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllBallConfig">
            <summary>Sets the shim of ProduceBussiness.GetAllBallConfig()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllCategory">
            <summary>Sets the shim of ProduceBussiness.GetAllCategory()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllDailyAward">
            <summary>Sets the shim of ProduceBussiness.GetAllDailyAward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllDropCondictions">
            <summary>Sets the shim of ProduceBussiness.GetAllDropCondictions()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllDropItems">
            <summary>Sets the shim of ProduceBussiness.GetAllDropItems()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllFusion">
            <summary>Sets the shim of ProduceBussiness.GetAllFusion()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllFusionDesc">
            <summary>Sets the shim of ProduceBussiness.GetAllFusionDesc()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllGoldEquipTemplateLoad">
            <summary>Sets the shim of ProduceBussiness.GetAllGoldEquipTemplateLoad()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllGoods">
            <summary>Sets the shim of ProduceBussiness.GetAllGoods()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllGoodsASC">
            <summary>Sets the shim of ProduceBussiness.GetAllGoodsASC()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllItemRecordType">
            <summary>Sets the shim of ProduceBussiness.GetAllItemRecordType()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllMissionInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllMissionInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllNPCInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllNPCInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllProp">
            <summary>Sets the shim of ProduceBussiness.GetAllProp()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllQuestCondiction">
            <summary>Sets the shim of ProduceBussiness.GetAllQuestCondiction()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllQuestGoods">
            <summary>Sets the shim of ProduceBussiness.GetAllQuestGoods()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllQuestRate">
            <summary>Sets the shim of ProduceBussiness.GetAllQuestRate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllRefineryInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllRefineryInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllRefineryStrengthen">
            <summary>Sets the shim of ProduceBussiness.GetAllRefineryStrengthen()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllRuneTemplate">
            <summary>Sets the shim of ProduceBussiness.GetAllRuneTemplate()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllShopGoodsShowList">
            <summary>Sets the shim of ProduceBussiness.GetAllShopGoodsShowList()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllStrengThenExp">
            <summary>Sets the shim of ProduceBussiness.GetAllStrengThenExp()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllStrengthen">
            <summary>Sets the shim of ProduceBussiness.GetAllStrengthen()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllStrengthenGoodsInfo">
            <summary>Sets the shim of ProduceBussiness.GetAllStrengthenGoodsInfo()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetAllTimeBoxAward">
            <summary>Sets the shim of ProduceBussiness.GetAllTimeBoxAward()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetDailyLogListSingleInt32">
            <summary>Sets the shim of ProduceBussiness.GetDailyLogListSingle(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetFusionType">
            <summary>Sets the shim of ProduceBussiness.GetFusionType()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetItemBoxInfos">
            <summary>Sets the shim of ProduceBussiness.GetItemBoxInfos()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetSingleCategoryInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleCategory(Int32 CategoryID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetSingleGoodsInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleGoods(Int32 goodsID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetSingleItemsBoxInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleItemsBox(Int32 DataID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.GetSingleQuestInt32">
            <summary>Sets the shim of ProduceBussiness.GetSingleQuest(Int32 questID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitAchievementConditionSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievementCondition(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitAchievementDataSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievementData(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitAchievementRewardSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievementReward(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitAchievementSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitAchievement(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitDropCondictionSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitDropCondiction(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitDropItemSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitDropItem(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitGoldEquipTemplateLoadSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitGoldEquipTemplateLoad(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitItemBoxInfoSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitItemBoxInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitItemRecordTypeSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitItemRecordType(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitItemTemplateInfoSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitItemTemplateInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitQuestCondictionSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuestCondiction(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitQuestGoodsSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuestGoods(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitQuestRateSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuestRate(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitQuestSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitQuest(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.InitShopGoodsShowListInfoSqlDataReader">
            <summary>Sets the shim of ProduceBussiness.InitShopGoodsShowListInfo(SqlDataReader reader)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.UpdateDailyLogListDailyLogListInfo">
            <summary>Sets the shim of ProduceBussiness.UpdateDailyLogList(DailyLogListInfo info)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimProduceBussiness.AllInstances.UpdatePlayerInfoHistoryPlayerInfoHistory">
            <summary>Sets the shim of ProduceBussiness.UpdatePlayerInfoHistory(PlayerInfoHistory info)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimPveBussiness">
            <summary>Shim type of Bussiness.PveBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPveBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPveBussiness.#ctor(Bussiness.PveBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPveBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPveBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimPveBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPveBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPveBussiness.Constructor">
            <summary>Sets the shim of PveBussiness.PveBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPveBussiness.GetAllPveInfos">
            <summary>Sets the shim of PveBussiness.GetAllPveInfos()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimPveBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimPveBussiness.AllInstances.GetAllPveInfos">
            <summary>Sets the shim of PveBussiness.GetAllPveInfos()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimServiceBussiness">
            <summary>Shim type of Bussiness.ServiceBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimServiceBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimServiceBussiness.#ctor(Bussiness.ServiceBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimServiceBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimServiceBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimServiceBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.Constructor">
            <summary>Sets the shim of ServiceBussiness.ServiceBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetFightRateInt32">
            <summary>Sets the shim of ServiceBussiness.GetFightRate(Int32 serverId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetGameEdition">
            <summary>Sets the shim of ServiceBussiness.GetGameEdition()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetRateInt32">
            <summary>Sets the shim of ServiceBussiness.GetRate(Int32 serverId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetRateWithTypeInt32Int32">
            <summary>Sets the shim of ServiceBussiness.GetRateWithType(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetRecordInfoDateTimeInt32">
            <summary>Sets the shim of ServiceBussiness.GetRecordInfo(DateTime date, Int32 SaveRecordSecond)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetServerConfig">
            <summary>Sets the shim of ServiceBussiness.GetServerConfig()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetServerList">
            <summary>Sets the shim of ServiceBussiness.GetServerList()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetServerPropertyByKeyString">
            <summary>Sets the shim of ServiceBussiness.GetServerPropertyByKey(String key)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetServiceByIPString">
            <summary>Sets the shim of ServiceBussiness.GetServiceByIP(String IP)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.GetServiceSingleInt32">
            <summary>Sets the shim of ServiceBussiness.GetServiceSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.UpdateRSAInt32String">
            <summary>Sets the shim of ServiceBussiness.UpdateRSA(Int32 ID, String RSA)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.UpdateServerPropertyByKeyStringString">
            <summary>Sets the shim of ServiceBussiness.UpdateServerPropertyByKey(String key, String value)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.UpdateServiceServerInfo">
            <summary>Sets the shim of ServiceBussiness.UpdateService(ServerInfo info)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimServiceBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetFightRateInt32">
            <summary>Sets the shim of ServiceBussiness.GetFightRate(Int32 serverId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetGameEdition">
            <summary>Sets the shim of ServiceBussiness.GetGameEdition()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetRateInt32">
            <summary>Sets the shim of ServiceBussiness.GetRate(Int32 serverId)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetRateWithTypeInt32Int32">
            <summary>Sets the shim of ServiceBussiness.GetRateWithType(Int32 serverId, Int32 type)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetRecordInfoDateTimeInt32">
            <summary>Sets the shim of ServiceBussiness.GetRecordInfo(DateTime date, Int32 SaveRecordSecond)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetServerConfig">
            <summary>Sets the shim of ServiceBussiness.GetServerConfig()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetServerList">
            <summary>Sets the shim of ServiceBussiness.GetServerList()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetServerPropertyByKeyString">
            <summary>Sets the shim of ServiceBussiness.GetServerPropertyByKey(String key)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetServiceByIPString">
            <summary>Sets the shim of ServiceBussiness.GetServiceByIP(String IP)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.GetServiceSingleInt32">
            <summary>Sets the shim of ServiceBussiness.GetServiceSingle(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.UpdateRSAInt32String">
            <summary>Sets the shim of ServiceBussiness.UpdateRSA(Int32 ID, String RSA)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.UpdateServerPropertyByKeyStringString">
            <summary>Sets the shim of ServiceBussiness.UpdateServerPropertyByKey(String key, String value)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimServiceBussiness.AllInstances.UpdateServiceServerInfo">
            <summary>Sets the shim of ServiceBussiness.UpdateService(ServerInfo info)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimStaticFunction">
            <summary>Shim type of Bussiness.StaticFunction</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimStaticFunction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimStaticFunction.#ctor(Bussiness.StaticFunction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimStaticFunction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimStaticFunction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimStaticFunction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimStaticFunction.Constructor">
            <summary>Sets the shim of StaticFunction.StaticFunction()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimStaticFunction.StaticConstructor">
            <summary>Sets the shim of StaticFunction.StaticFunction()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimStaticFunction.UpdateConfigStringStringString">
            <summary>Sets the shim of StaticFunction.UpdateConfig(String fileName, String name, String value)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimStaticFunction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimThreadSafeRandom">
            <summary>Shim type of Bussiness.ThreadSafeRandom</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimThreadSafeRandom.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimThreadSafeRandom.#ctor(Bussiness.ThreadSafeRandom)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimThreadSafeRandom.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimThreadSafeRandom.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.Constructor">
            <summary>Sets the shim of ThreadSafeRandom.ThreadSafeRandom()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.Next">
            <summary>Sets the shim of ThreadSafeRandom.Next()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.NextInt32">
            <summary>Sets the shim of ThreadSafeRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.NextInt32Int32">
            <summary>Sets the shim of ThreadSafeRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.NextStatic">
            <summary>Sets the shim of ThreadSafeRandom.NextStatic()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.NextStaticByteArray">
            <summary>Sets the shim of ThreadSafeRandom.NextStatic(Byte[] keys)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.NextStaticInt32">
            <summary>Sets the shim of ThreadSafeRandom.NextStatic(Int32 maxValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.NextStaticInt32Int32">
            <summary>Sets the shim of ThreadSafeRandom.NextStatic(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.StaticConstructor">
            <summary>Sets the shim of ThreadSafeRandom.ThreadSafeRandom()</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimThreadSafeRandom.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.AllInstances.Next">
            <summary>Sets the shim of ThreadSafeRandom.Next()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.AllInstances.NextInt32">
            <summary>Sets the shim of ThreadSafeRandom.Next(Int32 maxValue)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimThreadSafeRandom.AllInstances.NextInt32Int32">
            <summary>Sets the shim of ThreadSafeRandom.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimUserInfoBussiness">
            <summary>Shim type of Bussiness.UserInfoBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimUserInfoBussiness.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimUserInfoBussiness.#ctor(Bussiness.UserInfoBussiness)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimUserInfoBussiness.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimUserInfoBussiness.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimUserInfoBussiness.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimUserInfoBussiness.AddUserInfoStringStringString">
            <summary>Sets the shim of UserInfoBussiness.AddUserInfo(String uid, String userName, String portrait)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimUserInfoBussiness.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimUserInfoBussiness.Constructor">
            <summary>Sets the shim of UserInfoBussiness.UserInfoBussiness()</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimUserInfoBussiness.GetFromDbByUidStringStringRefStringRef">
            <summary>Sets the shim of UserInfoBussiness.GetFromDbByUid(String uid, String&amp; userName, String&amp; portrait)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimUserInfoBussiness.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimUserInfoBussiness.AllInstances.AddUserInfoStringStringString">
            <summary>Sets the shim of UserInfoBussiness.AddUserInfo(String uid, String userName, String portrait)</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimUserInfoBussiness.AllInstances.GetFromDbByUidStringStringRefStringRef">
            <summary>Sets the shim of UserInfoBussiness.GetFromDbByUid(String uid, String&amp; userName, String&amp; portrait)</summary>
        </member>
        <member name="T:Bussiness.Fakes.ShimXmlExtends">
            <summary>Shim type of Bussiness.XmlExtends</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimXmlExtends.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimXmlExtends.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Fakes.ShimXmlExtends.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimXmlExtends.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Fakes.ShimXmlExtends.ToStringXElementBoolean">
            <summary>Sets the shim of XmlExtends.ToString(XElement node, Boolean check)</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubActiveBussiness">
            <summary>Stub type of Bussiness.ActiveBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubActiveBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubActiveBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubActiveBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubActiveBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubActiveBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubActiveBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubBase64">
            <summary>Stub type of Bussiness.Base64</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubBase64.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubBase64.InitializeStub">
            <summary>Initializes a new instance of type StubBase64</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubBase64.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubBase64.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubBase64.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubBaseBussiness">
            <summary>Stub type of Bussiness.BaseBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubBaseBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubBaseBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubBaseBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubBaseBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubBaseBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubBaseBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubCheckCode">
            <summary>Stub type of Bussiness.CheckCode</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubCheckCode.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubCheckCode.InitializeStub">
            <summary>Initializes a new instance of type StubCheckCode</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCheckCode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCheckCode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCheckCode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubConsortiaBussiness">
            <summary>Stub type of Bussiness.ConsortiaBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubConsortiaBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubConsortiaBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubConsortiaBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubConsortiaBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubConsortiaBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubConsortiaBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubCookieInfoBussiness">
            <summary>Stub type of Bussiness.CookieInfoBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubCookieInfoBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubCookieInfoBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubCookieInfoBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCookieInfoBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCookieInfoBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCookieInfoBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubCountBussiness">
            <summary>Stub type of Bussiness.CountBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubCountBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubCountBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubCountBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCountBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCountBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubCountBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubGameProperties">
            <summary>Stub type of Bussiness.GameProperties</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubGameProperties.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubGameProperties.InitializeStub">
            <summary>Initializes a new instance of type StubGameProperties</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubGameProperties.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubGameProperties.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubGameProperties.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubIniReader">
            <summary>Stub type of Bussiness.IniReader</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubIniReader.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubIniReader.InitializeStub">
            <summary>Initializes a new instance of type StubIniReader</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubIniReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubIniReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubIniReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubItemRecordBussiness">
            <summary>Stub type of Bussiness.ItemRecordBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubItemRecordBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubItemRecordBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubItemRecordBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubItemRecordBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubItemRecordBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubItemRecordBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubLanguageMgr">
            <summary>Stub type of Bussiness.LanguageMgr</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubLanguageMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubLanguageMgr.InitializeStub">
            <summary>Initializes a new instance of type StubLanguageMgr</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubLanguageMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubLanguageMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubLanguageMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubManageBussiness">
            <summary>Stub type of Bussiness.ManageBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubManageBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubManageBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubManageBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubManageBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubManageBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubManageBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubMapBussiness">
            <summary>Stub type of Bussiness.MapBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubMapBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubMapBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubMapBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubMapBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubMapBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubMapBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubMemberShipBussiness">
            <summary>Stub type of Bussiness.MemberShipBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubMemberShipBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubMemberShipBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubMemberShipBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubMemberShipBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubMemberShipBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubMemberShipBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubOrderBussiness">
            <summary>Stub type of Bussiness.OrderBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubOrderBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubOrderBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubOrderBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubOrderBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubOrderBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubOrderBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubPlayerBussiness">
            <summary>Stub type of Bussiness.PlayerBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubPlayerBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubPlayerBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubPlayerBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubPlayerBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubPlayerBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubPlayerBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubProduceBussiness">
            <summary>Stub type of Bussiness.ProduceBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubProduceBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubProduceBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubProduceBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubProduceBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubProduceBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubProduceBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubPveBussiness">
            <summary>Stub type of Bussiness.PveBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubPveBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubPveBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubPveBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubPveBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubPveBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubPveBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubServiceBussiness">
            <summary>Stub type of Bussiness.ServiceBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubServiceBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubServiceBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubServiceBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubServiceBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubServiceBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubServiceBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubStaticFunction">
            <summary>Stub type of Bussiness.StaticFunction</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubStaticFunction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubStaticFunction.InitializeStub">
            <summary>Initializes a new instance of type StubStaticFunction</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubStaticFunction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubStaticFunction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubStaticFunction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubThreadSafeRandom">
            <summary>Stub type of Bussiness.ThreadSafeRandom</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubThreadSafeRandom.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubThreadSafeRandom.InitializeStub">
            <summary>Initializes a new instance of type StubThreadSafeRandom</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubThreadSafeRandom.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubThreadSafeRandom.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubThreadSafeRandom.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Fakes.StubUserInfoBussiness">
            <summary>Stub type of Bussiness.UserInfoBussiness</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubUserInfoBussiness.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Fakes.StubUserInfoBussiness.InitializeStub">
            <summary>Initializes a new instance of type StubUserInfoBussiness</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubUserInfoBussiness.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubUserInfoBussiness.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Fakes.StubUserInfoBussiness.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimBaseInterface">
            <summary>Shim type of Bussiness.Interface.BaseInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimBaseInterface.#ctor(Bussiness.Interface.BaseInterface)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimBaseInterface.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimBaseInterface.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.ActiveGoldGet">
            <summary>Sets the shim of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.ActiveMoneyGet">
            <summary>Sets the shim of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.Constructor">
            <summary>Sets the shim of BaseInterface.BaseInterface()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.ConvertDateTimeIntDateTime">
            <summary>Sets the shim of BaseInterface.ConvertDateTimeInt(DateTime time)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.ConvertIntDateTimeDouble">
            <summary>Sets the shim of BaseInterface.ConvertIntDateTime(Double d)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.CreateInterface">
            <summary>Sets the shim of BaseInterface.CreateInterface()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.GetChargeKeyGet">
            <summary>Sets the shim of BaseInterface.get_GetChargeKey()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.GetInterNameGet">
            <summary>Sets the shim of BaseInterface.get_GetInterName()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.GetLoginKeyGet">
            <summary>Sets the shim of BaseInterface.get_GetLoginKey()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.GetNameBySiteStringString">
            <summary>Sets the shim of BaseInterface.GetNameBySite(String user, String site)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.GetUserSexString">
            <summary>Sets the shim of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.LoginGameStringStringBooleanRef">
            <summary>Sets the shim of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.LoginUrlGet">
            <summary>Sets the shim of BaseInterface.get_LoginUrl()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.RequestContentString">
            <summary>Sets the shim of BaseInterface.RequestContent(String Url)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.RequestContentStringInt32">
            <summary>Sets the shim of BaseInterface.RequestContent(String Url, Int32 byteLength)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.RequestContentStringStringString">
            <summary>Sets the shim of BaseInterface.RequestContent(String Url, String param, String code)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.StaticConstructor">
            <summary>Sets the shim of BaseInterface.BaseInterface()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.md5String">
            <summary>Sets the shim of BaseInterface.md5(String str)</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimBaseInterface.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.AllInstances.ActiveGoldGet">
            <summary>Sets the shim of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.AllInstances.ActiveMoneyGet">
            <summary>Sets the shim of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.AllInstances.GetUserSexString">
            <summary>Sets the shim of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimBaseInterface.AllInstances.LoginGameStringStringBooleanRef">
            <summary>Sets the shim of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimDWInterface">
            <summary>Shim type of Bussiness.Interface.DWInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimDWInterface.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimDWInterface.#ctor(Bussiness.Interface.DWInterface)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimDWInterface.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimDWInterface.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimDWInterface.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimDWInterface.Constructor">
            <summary>Sets the shim of DWInterface.DWInterface()</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimDWInterface.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimQYInterface">
            <summary>Shim type of Bussiness.Interface.QYInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimQYInterface.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimQYInterface.#ctor(Bussiness.Interface.QYInterface)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimQYInterface.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimQYInterface.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimQYInterface.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimQYInterface.Constructor">
            <summary>Sets the shim of QYInterface.QYInterface()</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimQYInterface.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimSRInterface">
            <summary>Shim type of Bussiness.Interface.SRInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimSRInterface.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimSRInterface.#ctor(Bussiness.Interface.SRInterface)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimSRInterface.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.ShimSRInterface.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimSRInterface.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimSRInterface.Constructor">
            <summary>Sets the shim of SRInterface.SRInterface()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimSRInterface.GetUserSexString">
            <summary>Sets the shim of SRInterface.GetUserSex(String name)</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.ShimSRInterface.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.ShimSRInterface.AllInstances.GetUserSexString">
            <summary>Sets the shim of SRInterface.GetUserSex(String name)</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.StubBaseInterface">
            <summary>Stub type of Bussiness.Interface.BaseInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.ActiveGoldGet">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.ActiveMoneyGet">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.CreateLogin(System.String,System.String,System.String@,System.Int32@,System.String,System.Boolean@,System.Boolean,System.Boolean@,System.String,System.String)">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.CreateLoginStringStringStringRefInt32RefStringBooleanRefBooleanBooleanRefStringString">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.GetUserSex(System.String)">
            <summary>Sets the stub of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.GetUserSexString">
            <summary>Sets the stub of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.InitializeStub">
            <summary>Initializes a new instance of type StubBaseInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.LoginGame(System.String,System.String,System.Boolean@)">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.LoginGameStringStringBooleanRef">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.UnEncryptCharge(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.UnEncryptChargeStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.UnEncryptLogin(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.UnEncryptLoginStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubBaseInterface.UnEncryptSentReward(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubBaseInterface.UnEncryptSentRewardStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubBaseInterface.ActiveGold">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubBaseInterface.ActiveMoney">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubBaseInterface.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubBaseInterface.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubBaseInterface.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.StubDWInterface">
            <summary>Stub type of Bussiness.Interface.DWInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.ActiveGoldGet">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.ActiveMoneyGet">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.CreateLogin(System.String,System.String,System.String@,System.Int32@,System.String,System.Boolean@,System.Boolean,System.Boolean@,System.String,System.String)">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.CreateLoginStringStringStringRefInt32RefStringBooleanRefBooleanBooleanRefStringString">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.GetUserSex(System.String)">
            <summary>Sets the stub of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.GetUserSexString">
            <summary>Sets the stub of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.InitializeStub">
            <summary>Initializes a new instance of type StubDWInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.LoginGame(System.String,System.String,System.Boolean@)">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.LoginGameStringStringBooleanRef">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.UnEncryptCharge(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.UnEncryptChargeStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.UnEncryptLogin(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.UnEncryptLoginStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubDWInterface.UnEncryptSentReward(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubDWInterface.UnEncryptSentRewardStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubDWInterface.ActiveGold">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubDWInterface.ActiveMoney">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubDWInterface.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubDWInterface.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubDWInterface.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.StubQYInterface">
            <summary>Stub type of Bussiness.Interface.QYInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.ActiveGoldGet">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.ActiveMoneyGet">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.CreateLogin(System.String,System.String,System.String@,System.Int32@,System.String,System.Boolean@,System.Boolean,System.Boolean@,System.String,System.String)">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.CreateLoginStringStringStringRefInt32RefStringBooleanRefBooleanBooleanRefStringString">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.GetUserSex(System.String)">
            <summary>Sets the stub of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.GetUserSexString">
            <summary>Sets the stub of BaseInterface.GetUserSex(String name)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.InitializeStub">
            <summary>Initializes a new instance of type StubQYInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.LoginGame(System.String,System.String,System.Boolean@)">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.LoginGameStringStringBooleanRef">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.UnEncryptCharge(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.UnEncryptChargeStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.UnEncryptLogin(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.UnEncryptLoginStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubQYInterface.UnEncryptSentReward(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubQYInterface.UnEncryptSentRewardStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubQYInterface.ActiveGold">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubQYInterface.ActiveMoney">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubQYInterface.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubQYInterface.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubQYInterface.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Interface.Fakes.StubSRInterface">
            <summary>Stub type of Bussiness.Interface.SRInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.ActiveGoldGet">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.ActiveMoneyGet">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.CreateLogin(System.String,System.String,System.String@,System.Int32@,System.String,System.Boolean@,System.Boolean,System.Boolean@,System.String,System.String)">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.CreateLoginStringStringStringRefInt32RefStringBooleanRefBooleanBooleanRefStringString">
            <summary>Sets the stub of BaseInterface.CreateLogin(String name, String password, String&amp; message, Int32&amp; isFirst, String IP, Boolean&amp; isError, Boolean firstValidate, Boolean&amp; isActive, String site, String nickname)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.GetUserSex(System.String)">
            <summary>Sets the stub of SRInterface.GetUserSex(String name)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.GetUserSexString">
            <summary>Sets the stub of SRInterface.GetUserSex(String name)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.InitializeStub">
            <summary>Initializes a new instance of type StubSRInterface</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.LoginGame(System.String,System.String,System.Boolean@)">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.LoginGameStringStringBooleanRef">
            <summary>Sets the stub of BaseInterface.LoginGame(String name, String pass, Boolean&amp; isFirst)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.UnEncryptCharge(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.UnEncryptChargeStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptCharge(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.UnEncryptLogin(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.UnEncryptLoginStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptLogin(String content, Int32&amp; result, String site)</summary>
        </member>
        <member name="M:Bussiness.Interface.Fakes.StubSRInterface.UnEncryptSentReward(System.String,System.Int32@,System.String)">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="F:Bussiness.Interface.Fakes.StubSRInterface.UnEncryptSentRewardStringInt32RefString">
            <summary>Sets the stub of BaseInterface.UnEncryptSentReward(String content, Int32&amp; result, String key)</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubSRInterface.ActiveGold">
            <summary>Sets the stub of BaseInterface.get_ActiveGold()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubSRInterface.ActiveMoney">
            <summary>Sets the stub of BaseInterface.get_ActiveMoney()</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubSRInterface.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubSRInterface.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Interface.Fakes.StubSRInterface.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimAchievementMgr">
            <summary>Shim type of Bussiness.Managers.AchievementMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimAchievementMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimAchievementMgr.#ctor(Bussiness.Managers.AchievementMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimAchievementMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimAchievementMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.AchievementGet">
            <summary>Sets the shim of AchievementMgr.get_Achievement()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.Constructor">
            <summary>Sets the shim of AchievementMgr.AchievementMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.GetAchievementConditionAchievementInfo">
            <summary>Sets the shim of AchievementMgr.GetAchievementCondition(AchievementInfo info)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.GetAchievementRewardAchievementInfo">
            <summary>Sets the shim of AchievementMgr.GetAchievementReward(AchievementInfo info)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.GetNextLimitInt32Int32">
            <summary>Sets the shim of AchievementMgr.GetNextLimit(Int32 recordType, Int32 recordValue)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.GetSingleAchievementInt32">
            <summary>Sets the shim of AchievementMgr.GetSingleAchievement(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.Init">
            <summary>Sets the shim of AchievementMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.ItemRecordTypeGet">
            <summary>Sets the shim of AchievementMgr.get_ItemRecordType()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.LoadAchievementConditionInfoDBDictionaryOfInt32AchievementInfo">
            <summary>Sets the shim of AchievementMgr.LoadAchievementConditionInfoDB(Dictionary`2&lt;Int32,AchievementInfo&gt; achievementInfos)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.LoadAchievementInfoDB">
            <summary>Sets the shim of AchievementMgr.LoadAchievementInfoDB()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.LoadAchievementRewardInfoDBDictionaryOfInt32AchievementInfo">
            <summary>Sets the shim of AchievementMgr.LoadAchievementRewardInfoDB(Dictionary`2&lt;Int32,AchievementInfo&gt; achievementInfos)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.LoadItemRecordTypeInfoDB">
            <summary>Sets the shim of AchievementMgr.LoadItemRecordTypeInfoDB()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.Reload">
            <summary>Sets the shim of AchievementMgr.Reload()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimAchievementMgr.StaticConstructor">
            <summary>Sets the shim of AchievementMgr.AchievementMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimAchievementMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimActiveMgr">
            <summary>Shim type of Bussiness.Managers.ActiveMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimActiveMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimActiveMgr.#ctor(Bussiness.Managers.ActiveMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimActiveMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimActiveMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.Constructor">
            <summary>Sets the shim of ActiveMgr.ActiveMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.GetAwardInfoDateTimeInt32">
            <summary>Sets the shim of ActiveMgr.GetAwardInfo(DateTime lastDate, Int32 playerGrade)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.Init">
            <summary>Sets the shim of ActiveMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.IsInGradeStringInt32">
            <summary>Sets the shim of ActiveMgr.IsInGrade(String limitGrade, Int32 playerGrade)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.IsValidActiveConditionInfo">
            <summary>Sets the shim of ActiveMgr.IsValid(ActiveConditionInfo info)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.LoadActiveAwardDbDictionaryOfInt32ListOfActiveConditionInfo">
            <summary>Sets the shim of ActiveMgr.LoadActiveAwardDb(Dictionary`2&lt;Int32,List`1&lt;ActiveConditionInfo&gt;&gt; conditions)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.LoadActiveConditionDb">
            <summary>Sets the shim of ActiveMgr.LoadActiveConditionDb()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.ReLoad">
            <summary>Sets the shim of ActiveMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimActiveMgr.StaticConstructor">
            <summary>Sets the shim of ActiveMgr.ActiveMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimActiveMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimDropMgr">
            <summary>Shim type of Bussiness.Managers.DropMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimDropMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimDropMgr.#ctor(Bussiness.Managers.DropMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimDropMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimDropMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.Constructor">
            <summary>Sets the shim of DropMgr.DropMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.FindCondictioneDropTypeStringString">
            <summary>Sets the shim of DropMgr.FindCondiction(eDropType type, String para1, String para2)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.FindDropItemInt32">
            <summary>Sets the shim of DropMgr.FindDropItem(Int32 dropId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.Init">
            <summary>Sets the shim of DropMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.LoadDropConditionDb">
            <summary>Sets the shim of DropMgr.LoadDropConditionDb()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.LoadDropItemDb">
            <summary>Sets the shim of DropMgr.LoadDropItemDb()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.ReLoad">
            <summary>Sets the shim of DropMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimDropMgr.StaticConstructor">
            <summary>Sets the shim of DropMgr.DropMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimDropMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr">
            <summary>Shim type of Bussiness.Managers.FightSpiritTemplateMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.#ctor(Bussiness.Managers.FightSpiritTemplateMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.Constructor">
            <summary>Sets the shim of FightSpiritTemplateMgr.FightSpiritTemplateMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.FindFightSpiritTemplateInfoInt32Int32">
            <summary>Sets the shim of FightSpiritTemplateMgr.FindFightSpiritTemplateInfo(Int32 FigSpiritId, Int32 lv)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.Init">
            <summary>Sets the shim of FightSpiritTemplateMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.LoadDictionaryOfInt32FightSpiritTemplateInfo">
            <summary>Sets the shim of FightSpiritTemplateMgr.Load(Dictionary`2&lt;Int32,FightSpiritTemplateInfo&gt; consortiaLevel)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.ReLoad">
            <summary>Sets the shim of FightSpiritTemplateMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.StaticConstructor">
            <summary>Sets the shim of FightSpiritTemplateMgr.FightSpiritTemplateMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.getPropInt32Int32Int32">
            <summary>Sets the shim of FightSpiritTemplateMgr.getProp(Int32 FigSpiritId, Int32 lv, Int32 place)</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimFightSpiritTemplateMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimGoldEquipMgr">
            <summary>Shim type of Bussiness.Managers.GoldEquipMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimGoldEquipMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimGoldEquipMgr.#ctor(Bussiness.Managers.GoldEquipMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimGoldEquipMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimGoldEquipMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.Constructor">
            <summary>Sets the shim of GoldEquipMgr.GoldEquipMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.FindGoldEquipCategoryIDInt32">
            <summary>Sets the shim of GoldEquipMgr.FindGoldEquipCategoryID(Int32 CategoryID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.FindGoldEquipNewTemplateInt32">
            <summary>Sets the shim of GoldEquipMgr.FindGoldEquipNewTemplate(Int32 TemplateId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.FindGoldEquipOldTemplateInt32">
            <summary>Sets the shim of GoldEquipMgr.FindGoldEquipOldTemplate(Int32 TemplateId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.Init">
            <summary>Sets the shim of GoldEquipMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.LoadItemDictionaryOfInt32GoldEquipTemplateLoadInfo">
            <summary>Sets the shim of GoldEquipMgr.LoadItem(Dictionary`2&lt;Int32,GoldEquipTemplateLoadInfo&gt; infos)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.ReLoad">
            <summary>Sets the shim of GoldEquipMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimGoldEquipMgr.StaticConstructor">
            <summary>Sets the shim of GoldEquipMgr.GoldEquipMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimGoldEquipMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimItemBoxMgr">
            <summary>Shim type of Bussiness.Managers.ItemBoxMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemBoxMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemBoxMgr.#ctor(Bussiness.Managers.ItemBoxMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemBoxMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemBoxMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.Constructor">
            <summary>Sets the shim of ItemBoxMgr.ItemBoxMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.CreateItemBoxInt32ListOfItemInfoInt32RefInt32RefInt32RefInt32RefInt32Ref">
            <summary>Sets the shim of ItemBoxMgr.CreateItemBox(Int32 DateId, List`1&lt;ItemInfo&gt; itemInfos, Int32&amp; gold, Int32&amp; point, Int32&amp; giftToken, Int32&amp; medal, Int32&amp; exp)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.FindItemBoxInt32">
            <summary>Sets the shim of ItemBoxMgr.FindItemBox(Int32 DataId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.FindSpecialItemBoxInt32">
            <summary>Sets the shim of ItemBoxMgr.FindSpecialItemBox(Int32 DataId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.GetAllItemBoxAwardInt32">
            <summary>Sets the shim of ItemBoxMgr.GetAllItemBoxAward(Int32 DataId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.GetRandomUnrepeatArrayInt32Int32Int32">
            <summary>Sets the shim of ItemBoxMgr.GetRandomUnrepeatArray(Int32 minValue, Int32 maxValue, Int32 count)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.Init">
            <summary>Sets the shim of ItemBoxMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.LoadItemBoxDb">
            <summary>Sets the shim of ItemBoxMgr.LoadItemBoxDb()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.LoadItemBoxsItemBoxInfoArray">
            <summary>Sets the shim of ItemBoxMgr.LoadItemBoxs(ItemBoxInfo[] itemBoxs)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.ReLoad">
            <summary>Sets the shim of ItemBoxMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr.StaticConstructor">
            <summary>Sets the shim of ItemBoxMgr.ItemBoxMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr._CreateItemBoxb__4ItemBoxInfo">
            <summary>Sets the shim of ItemBoxMgr.&lt;CreateItemBox&gt;b__4(ItemBoxInfo s)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr._CreateItemBoxb__5ItemBoxInfo">
            <summary>Sets the shim of ItemBoxMgr.&lt;CreateItemBox&gt;b__5(ItemBoxInfo s)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemBoxMgr._CreateItemBoxb__6ItemBoxInfo">
            <summary>Sets the shim of ItemBoxMgr.&lt;CreateItemBox&gt;b__6(ItemBoxInfo s)</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimItemBoxMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimItemMgr">
            <summary>Shim type of Bussiness.Managers.ItemMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemMgr.#ctor(Bussiness.Managers.ItemMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimItemMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.Constructor">
            <summary>Sets the shim of ItemMgr.ItemMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.FindItemBoxTemplateInt32">
            <summary>Sets the shim of ItemMgr.FindItemBoxTemplate(Int32 Id)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.FindItemBoxTypeAndLvInt32Int32">
            <summary>Sets the shim of ItemMgr.FindItemBoxTypeAndLv(Int32 type, Int32 lv)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.FindItemTemplateInt32">
            <summary>Sets the shim of ItemMgr.FindItemTemplate(Int32 templateId)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.FindRecycleItemTemplateInt32">
            <summary>Sets the shim of ItemMgr.FindRecycleItemTemplate(Int32 qmax)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.GetGoodsbyFusionTypeandLevelInt32Int32">
            <summary>Sets the shim of ItemMgr.GetGoodsbyFusionTypeandLevel(Int32 fusionType, Int32 level)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.GetGoodsbyFusionTypeandQualityInt32Int32">
            <summary>Sets the shim of ItemMgr.GetGoodsbyFusionTypeandQuality(Int32 fusionType, Int32 quality)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.Init">
            <summary>Sets the shim of ItemMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.LoadItemDictionaryOfInt32ItemTemplateInfoDictionaryOfInt32LoadUserBoxInfo">
            <summary>Sets the shim of ItemMgr.LoadItem(Dictionary`2&lt;Int32,ItemTemplateInfo&gt; infos, Dictionary`2&lt;Int32,LoadUserBoxInfo&gt; userBoxs)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.LoadRecycleItemTemplate">
            <summary>Sets the shim of ItemMgr.LoadRecycleItemTemplate()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.ReLoad">
            <summary>Sets the shim of ItemMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.SpiltGoodsMaxCountItemInfo">
            <summary>Sets the shim of ItemMgr.SpiltGoodsMaxCount(ItemInfo itemInfo)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimItemMgr.StaticConstructor">
            <summary>Sets the shim of ItemMgr.ItemMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimItemMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimQuestMgr">
            <summary>Shim type of Bussiness.Managers.QuestMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimQuestMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimQuestMgr.#ctor(Bussiness.Managers.QuestMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimQuestMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimQuestMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.Constructor">
            <summary>Sets the shim of QuestMgr.QuestMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.GetQuestCondictionQuestInfo">
            <summary>Sets the shim of QuestMgr.GetQuestCondiction(QuestInfo info)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.GetQuestGoodsQuestInfo">
            <summary>Sets the shim of QuestMgr.GetQuestGoods(QuestInfo info)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.GetSingleQuestInt32">
            <summary>Sets the shim of QuestMgr.GetSingleQuest(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.Init">
            <summary>Sets the shim of QuestMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.LoadQuestCondictionDbDictionaryOfInt32QuestInfo">
            <summary>Sets the shim of QuestMgr.LoadQuestCondictionDb(Dictionary`2&lt;Int32,QuestInfo&gt; quests)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.LoadQuestGoodDbDictionaryOfInt32QuestInfo">
            <summary>Sets the shim of QuestMgr.LoadQuestGoodDb(Dictionary`2&lt;Int32,QuestInfo&gt; quests)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.LoadQuestInfoDb">
            <summary>Sets the shim of QuestMgr.LoadQuestInfoDb()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.ReLoad">
            <summary>Sets the shim of QuestMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimQuestMgr.StaticConstructor">
            <summary>Sets the shim of QuestMgr.QuestMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimQuestMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimShopMgr">
            <summary>Shim type of Bussiness.Managers.ShopMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimShopMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimShopMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimShopMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.CanBuyInt32Int32BooleanRefInt32Int32">
            <summary>Sets the shim of ShopMgr.CanBuy(Int32 shopID, Int32 consortiaShopLevel, Boolean&amp; isBinds, Int32 cousortiaID, Int32 playerRiches)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.FindItemTemplateIDInt32">
            <summary>Sets the shim of ShopMgr.FindItemTemplateID(Int32 id)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.FindShopbyTemplatIDInt32">
            <summary>Sets the shim of ShopMgr.FindShopbyTemplatID(Int32 TemplatID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.FindShopbyTemplateIDInt32">
            <summary>Sets the shim of ShopMgr.FindShopbyTemplateID(Int32 TemplatID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.FindSpecialItemInfoItemInfoInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32Ref">
            <summary>Sets the shim of ShopMgr.FindSpecialItemInfo(ItemInfo info, Int32&amp; gold, Int32&amp; money, Int32&amp; giftToken, Int32&amp; medal, Int32&amp; honor, Int32&amp; hardCurrency, Int32&amp; token, Int32&amp; dragonToken)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.GetItemPriceInt32Int32DecimalInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32Ref">
            <summary>Sets the shim of ShopMgr.GetItemPrice(Int32 Prices, Int32 Values, Decimal beat, Int32&amp; damageScore, Int32&amp; petScore, Int32&amp; iTemplateID, Int32&amp; iCount, Int32&amp; gold, Int32&amp; money, Int32&amp; offer, Int32&amp; gifttoken, Int32&amp; medal, Int32&amp; hardCurrency, Int32&amp; LeagueMoney)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.GetShopItemInfoByIdInt32">
            <summary>Sets the shim of ShopMgr.GetShopItemInfoById(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.Init">
            <summary>Sets the shim of ShopMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.LoadFromDatabase">
            <summary>Sets the shim of ShopMgr.LoadFromDatabase()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.ReLoad">
            <summary>Sets the shim of ShopMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.SetItemTypeShopItemInfoInt32Int32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32RefInt32Ref">
            <summary>Sets the shim of ShopMgr.SetItemType(ShopItemInfo shop, Int32 type, Int32&amp; damageScore, Int32&amp; petScore, Int32&amp; iTemplateID, Int32&amp; iCount, Int32&amp; gold, Int32&amp; money, Int32&amp; offer, Int32&amp; gifttoken, Int32&amp; medal, Int32&amp; hardCurrency, Int32&amp; LeagueMoney)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimShopMgr.StaticConstructor">
            <summary>Sets the shim of ShopMgr.ShopMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimTotemHonorMgr">
            <summary>Shim type of Bussiness.Managers.TotemHonorMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemHonorMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemHonorMgr.#ctor(Bussiness.Managers.TotemHonorMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemHonorMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemHonorMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.Constructor">
            <summary>Sets the shim of TotemHonorMgr.TotemHonorMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.FindTotemHonorTemplateInfoInt32">
            <summary>Sets the shim of TotemHonorMgr.FindTotemHonorTemplateInfo(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.Init">
            <summary>Sets the shim of TotemHonorMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.LoadDictionaryOfInt32TotemHonorTemplateInfo">
            <summary>Sets the shim of TotemHonorMgr.Load(Dictionary`2&lt;Int32,TotemHonorTemplateInfo&gt; TotemHonorTemplate)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.ReLoad">
            <summary>Sets the shim of TotemHonorMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemHonorMgr.StaticConstructor">
            <summary>Sets the shim of TotemHonorMgr.TotemHonorMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimTotemHonorMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimTotemMgr">
            <summary>Shim type of Bussiness.Managers.TotemMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemMgr.#ctor(Bussiness.Managers.TotemMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTotemMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.Constructor">
            <summary>Sets the shim of TotemMgr.TotemMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.FindTotemInfoInt32">
            <summary>Sets the shim of TotemMgr.FindTotemInfo(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.GetTotemPropInt32String">
            <summary>Sets the shim of TotemMgr.GetTotemProp(Int32 id, String typeOf)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.Init">
            <summary>Sets the shim of TotemMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.LoadDictionaryOfInt32TotemInfo">
            <summary>Sets the shim of TotemMgr.Load(Dictionary`2&lt;Int32,TotemInfo&gt; totem)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.ReLoad">
            <summary>Sets the shim of TotemMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTotemMgr.StaticConstructor">
            <summary>Sets the shim of TotemMgr.TotemMgr()</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimTotemMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimTreasureAwardMgr">
            <summary>Shim type of Bussiness.Managers.TreasureAwardMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.#ctor(Bussiness.Managers.TreasureAwardMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.Constructor">
            <summary>Sets the shim of TreasureAwardMgr.TreasureAwardMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.CreateTreasureDataInt32">
            <summary>Sets the shim of TreasureAwardMgr.CreateTreasureData(Int32 UserID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.FindTreasureAwardInfoInt32">
            <summary>Sets the shim of TreasureAwardMgr.FindTreasureAwardInfo(Int32 ID)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.GetRandomUnrepeatArrayInt32Int32Int32">
            <summary>Sets the shim of TreasureAwardMgr.GetRandomUnrepeatArray(Int32 minValue, Int32 maxValue, Int32 count)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.GetTreasureData">
            <summary>Sets the shim of TreasureAwardMgr.GetTreasureData()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.GetTreasureInfos">
            <summary>Sets the shim of TreasureAwardMgr.GetTreasureInfos()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.Init">
            <summary>Sets the shim of TreasureAwardMgr.Init()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.LoadDictionaryOfInt32TreasureAwardInfo">
            <summary>Sets the shim of TreasureAwardMgr.Load(Dictionary`2&lt;Int32,TreasureAwardInfo&gt; treasureAward)</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.ReLoad">
            <summary>Sets the shim of TreasureAwardMgr.ReLoad()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.StaticConstructor">
            <summary>Sets the shim of TreasureAwardMgr.TreasureAwardMgr()</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.ShimTreasureAwardMgr._GetTreasureDatab__0TreasureAwardInfo">
            <summary>Sets the shim of TreasureAwardMgr.&lt;GetTreasureData&gt;b__0(TreasureAwardInfo s)</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.ShimTreasureAwardMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubAchievementMgr">
            <summary>Stub type of Bussiness.Managers.AchievementMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubAchievementMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubAchievementMgr.InitializeStub">
            <summary>Initializes a new instance of type StubAchievementMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubAchievementMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubAchievementMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubAchievementMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubActiveMgr">
            <summary>Stub type of Bussiness.Managers.ActiveMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubActiveMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubActiveMgr.InitializeStub">
            <summary>Initializes a new instance of type StubActiveMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubActiveMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubActiveMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubActiveMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubDropMgr">
            <summary>Stub type of Bussiness.Managers.DropMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubDropMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubDropMgr.InitializeStub">
            <summary>Initializes a new instance of type StubDropMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubDropMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubDropMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubDropMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubFightSpiritTemplateMgr">
            <summary>Stub type of Bussiness.Managers.FightSpiritTemplateMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubFightSpiritTemplateMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubFightSpiritTemplateMgr.InitializeStub">
            <summary>Initializes a new instance of type StubFightSpiritTemplateMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubFightSpiritTemplateMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubFightSpiritTemplateMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubFightSpiritTemplateMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubGoldEquipMgr">
            <summary>Stub type of Bussiness.Managers.GoldEquipMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubGoldEquipMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubGoldEquipMgr.InitializeStub">
            <summary>Initializes a new instance of type StubGoldEquipMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubGoldEquipMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubGoldEquipMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubGoldEquipMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubItemBoxMgr">
            <summary>Stub type of Bussiness.Managers.ItemBoxMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubItemBoxMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubItemBoxMgr.InitializeStub">
            <summary>Initializes a new instance of type StubItemBoxMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubItemBoxMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubItemBoxMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubItemBoxMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubItemMgr">
            <summary>Stub type of Bussiness.Managers.ItemMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubItemMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubItemMgr.InitializeStub">
            <summary>Initializes a new instance of type StubItemMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubItemMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubItemMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubItemMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubQuestMgr">
            <summary>Stub type of Bussiness.Managers.QuestMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubQuestMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubQuestMgr.InitializeStub">
            <summary>Initializes a new instance of type StubQuestMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubQuestMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubQuestMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubQuestMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubTotemHonorMgr">
            <summary>Stub type of Bussiness.Managers.TotemHonorMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubTotemHonorMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubTotemHonorMgr.InitializeStub">
            <summary>Initializes a new instance of type StubTotemHonorMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTotemHonorMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTotemHonorMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTotemHonorMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubTotemMgr">
            <summary>Stub type of Bussiness.Managers.TotemMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubTotemMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubTotemMgr.InitializeStub">
            <summary>Initializes a new instance of type StubTotemMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTotemMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTotemMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTotemMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.Managers.Fakes.StubTreasureAwardMgr">
            <summary>Stub type of Bussiness.Managers.TreasureAwardMgr</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubTreasureAwardMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.Managers.Fakes.StubTreasureAwardMgr.InitializeStub">
            <summary>Initializes a new instance of type StubTreasureAwardMgr</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTreasureAwardMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTreasureAwardMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.Managers.Fakes.StubTreasureAwardMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest">
            <summary>Shim type of Bussiness.WebLogin.ChenckValidateRequest</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.#ctor(Bussiness.WebLogin.ChenckValidateRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.Constructor">
            <summary>Sets the shim of ChenckValidateRequest.ChenckValidateRequest()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.ConstructorChenckValidateRequestBody">
            <summary>Sets the shim of ChenckValidateRequest.ChenckValidateRequest(ChenckValidateRequestBody Body)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody">
            <summary>Shim type of Bussiness.WebLogin.ChenckValidateRequestBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.#ctor(Bussiness.WebLogin.ChenckValidateRequestBody)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.Constructor">
            <summary>Sets the shim of ChenckValidateRequestBody.ChenckValidateRequestBody()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.ConstructorStringStringString">
            <summary>Sets the shim of ChenckValidateRequestBody.ChenckValidateRequestBody(String applicationname, String username, String password)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateRequestBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse">
            <summary>Shim type of Bussiness.WebLogin.ChenckValidateResponse</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.#ctor(Bussiness.WebLogin.ChenckValidateResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.Constructor">
            <summary>Sets the shim of ChenckValidateResponse.ChenckValidateResponse()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.ConstructorChenckValidateResponseBody">
            <summary>Sets the shim of ChenckValidateResponse.ChenckValidateResponse(ChenckValidateResponseBody Body)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody">
            <summary>Shim type of Bussiness.WebLogin.ChenckValidateResponseBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.#ctor(Bussiness.WebLogin.ChenckValidateResponseBody)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.Constructor">
            <summary>Sets the shim of ChenckValidateResponseBody.ChenckValidateResponseBody()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.ConstructorString">
            <summary>Sets the shim of ChenckValidateResponseBody.ChenckValidateResponseBody(String ChenckValidateResult)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimChenckValidateResponseBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest">
            <summary>Shim type of Bussiness.WebLogin.Get_UserSexRequest</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.#ctor(Bussiness.WebLogin.Get_UserSexRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.Constructor">
            <summary>Sets the shim of Get_UserSexRequest.Get_UserSexRequest()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.ConstructorGet_UserSexRequestBody">
            <summary>Sets the shim of Get_UserSexRequest.Get_UserSexRequest(Get_UserSexRequestBody Body)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody">
            <summary>Shim type of Bussiness.WebLogin.Get_UserSexRequestBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.#ctor(Bussiness.WebLogin.Get_UserSexRequestBody)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.Constructor">
            <summary>Sets the shim of Get_UserSexRequestBody.Get_UserSexRequestBody()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.ConstructorStringString">
            <summary>Sets the shim of Get_UserSexRequestBody.Get_UserSexRequestBody(String applicationname, String username)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexRequestBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse">
            <summary>Shim type of Bussiness.WebLogin.Get_UserSexResponse</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.#ctor(Bussiness.WebLogin.Get_UserSexResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.Constructor">
            <summary>Sets the shim of Get_UserSexResponse.Get_UserSexResponse()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.ConstructorGet_UserSexResponseBody">
            <summary>Sets the shim of Get_UserSexResponse.Get_UserSexResponse(Get_UserSexResponseBody Body)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody">
            <summary>Shim type of Bussiness.WebLogin.Get_UserSexResponseBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.#ctor(Bussiness.WebLogin.Get_UserSexResponseBody)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.Constructor">
            <summary>Sets the shim of Get_UserSexResponseBody.Get_UserSexResponseBody()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.ConstructorNullableOfBoolean">
            <summary>Sets the shim of Get_UserSexResponseBody.Get_UserSexResponseBody(Nullable`1&lt;Boolean&gt; Get_UserSexResult)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimGet_UserSexResponseBody.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient">
            <summary>Shim type of Bussiness.WebLogin.PassPortSoapClient</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.#ctor(Bussiness.WebLogin.PassPortSoapClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.Bind(Bussiness.WebLogin.PassPortSoap)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.Bind(System.ServiceModel.ICommunicationObject)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.BussinessWebLoginPassPortSoapChenckValidateChenckValidateRequest">
            <summary>Sets the shim of PassPortSoapClient.Bussiness.WebLogin.PassPortSoap.ChenckValidate(ChenckValidateRequest request)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.BussinessWebLoginPassPortSoapGet_UserSexGet_UserSexRequest">
            <summary>Sets the shim of PassPortSoapClient.Bussiness.WebLogin.PassPortSoap.Get_UserSex(Get_UserSexRequest request)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.ChenckValidateStringStringString">
            <summary>Sets the shim of PassPortSoapClient.ChenckValidate(String applicationname, String username, String password)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.Constructor">
            <summary>Sets the shim of PassPortSoapClient.PassPortSoapClient()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.ConstructorBindingEndpointAddress">
            <summary>Sets the shim of PassPortSoapClient.PassPortSoapClient(Binding binding, EndpointAddress remoteAddress)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.ConstructorString">
            <summary>Sets the shim of PassPortSoapClient.PassPortSoapClient(String endpointConfigurationName)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.ConstructorStringEndpointAddress">
            <summary>Sets the shim of PassPortSoapClient.PassPortSoapClient(String endpointConfigurationName, EndpointAddress remoteAddress)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.ConstructorStringString">
            <summary>Sets the shim of PassPortSoapClient.PassPortSoapClient(String endpointConfigurationName, String remoteAddress)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.Get_UserSexStringString">
            <summary>Sets the shim of PassPortSoapClient.Get_UserSex(String applicationname, String username)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.AllInstances.BussinessWebLoginPassPortSoapChenckValidateChenckValidateRequest">
            <summary>Sets the shim of PassPortSoapClient.Bussiness.WebLogin.PassPortSoap.ChenckValidate(ChenckValidateRequest request)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.AllInstances.BussinessWebLoginPassPortSoapGet_UserSexGet_UserSexRequest">
            <summary>Sets the shim of PassPortSoapClient.Bussiness.WebLogin.PassPortSoap.Get_UserSex(Get_UserSexRequest request)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.AllInstances.ChenckValidateStringStringString">
            <summary>Sets the shim of PassPortSoapClient.ChenckValidate(String applicationname, String username, String password)</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.ShimPassPortSoapClient.AllInstances.Get_UserSexStringString">
            <summary>Sets the shim of PassPortSoapClient.Get_UserSex(String applicationname, String username)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubChenckValidateRequest">
            <summary>Stub type of Bussiness.WebLogin.ChenckValidateRequest</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateRequest.#ctor(Bussiness.WebLogin.ChenckValidateRequestBody)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateRequest.InitializeStub">
            <summary>Initializes a new instance of type StubChenckValidateRequest</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody">
            <summary>Stub type of Bussiness.WebLogin.ChenckValidateRequestBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody.InitializeStub">
            <summary>Initializes a new instance of type StubChenckValidateRequestBody</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateRequestBody.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubChenckValidateResponse">
            <summary>Stub type of Bussiness.WebLogin.ChenckValidateResponse</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateResponse.#ctor(Bussiness.WebLogin.ChenckValidateResponseBody)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateResponse.InitializeStub">
            <summary>Initializes a new instance of type StubChenckValidateResponse</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody">
            <summary>Stub type of Bussiness.WebLogin.ChenckValidateResponseBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody.InitializeStub">
            <summary>Initializes a new instance of type StubChenckValidateResponseBody</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubChenckValidateResponseBody.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest">
            <summary>Stub type of Bussiness.WebLogin.Get_UserSexRequest</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest.#ctor(Bussiness.WebLogin.Get_UserSexRequestBody)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest.InitializeStub">
            <summary>Initializes a new instance of type StubGet_UserSexRequest</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody">
            <summary>Stub type of Bussiness.WebLogin.Get_UserSexRequestBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody.InitializeStub">
            <summary>Initializes a new instance of type StubGet_UserSexRequestBody</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexRequestBody.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse">
            <summary>Stub type of Bussiness.WebLogin.Get_UserSexResponse</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse.#ctor(Bussiness.WebLogin.Get_UserSexResponseBody)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse.InitializeStub">
            <summary>Initializes a new instance of type StubGet_UserSexResponse</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody">
            <summary>Stub type of Bussiness.WebLogin.Get_UserSexResponseBody</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody.#ctor(System.Nullable{System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody.InitializeStub">
            <summary>Initializes a new instance of type StubGet_UserSexResponseBody</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubGet_UserSexResponseBody.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubPassPortSoap">
            <summary>Stub type of Bussiness.WebLogin.PassPortSoap</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoap.#ctor">
            <summary>Initializes a new instance of type StubPassPortSoap</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoap.b::Bussiness#WebLogin#PassPortSoap#ChenckValidate(Bussiness.WebLogin.ChenckValidateRequest)">
            <summary>Sets the stub of PassPortSoap.ChenckValidate(ChenckValidateRequest request)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoap.b::Bussiness#WebLogin#PassPortSoap#Get_UserSex(Bussiness.WebLogin.Get_UserSexRequest)">
            <summary>Sets the stub of PassPortSoap.Get_UserSex(Get_UserSexRequest request)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoap.ChenckValidateChenckValidateRequest">
            <summary>Sets the stub of PassPortSoap.ChenckValidate(ChenckValidateRequest request)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoap.Get_UserSexGet_UserSexRequest">
            <summary>Sets the stub of PassPortSoap.Get_UserSex(Get_UserSexRequest request)</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel">
            <summary>Stub type of Bussiness.WebLogin.PassPortSoapChannel</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.#ctor">
            <summary>Initializes a new instance of type StubPassPortSoapChannel</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.Abort">
            <summary>Sets the stub of ICommunicationObject.Abort()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AllowInitializationUIGet">
            <summary>Sets the stub of IClientChannel.get_AllowInitializationUI()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AllowInitializationUISetBoolean">
            <summary>Sets the stub of IClientChannel.set_AllowInitializationUI(Boolean value)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AllowOutputBatchingGet">
            <summary>Sets the stub of IContextChannel.get_AllowOutputBatching()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AllowOutputBatchingSetBoolean">
            <summary>Sets the stub of IContextChannel.set_AllowOutputBatching(Boolean value)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AttachBackingFieldToAllowInitializationUI">
            <summary>Attaches delegates to emulate StubPassPortSoapChannel.AllowInitializationUI as a property with a backing field.</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AttachBackingFieldToAllowOutputBatching">
            <summary>Attaches delegates to emulate StubPassPortSoapChannel.AllowOutputBatching as a property with a backing field.</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.AttachBackingFieldToOperationTimeout">
            <summary>Attaches delegates to emulate StubPassPortSoapChannel.OperationTimeout as a property with a backing field.</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.BeginCloseAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginClose(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.BeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.BeginDisplayInitializationUIAsyncCallbackObject">
            <summary>Sets the stub of IClientChannel.BeginDisplayInitializationUI(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.BeginOpenAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.BeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.b::Bussiness#WebLogin#PassPortSoap#ChenckValidate(Bussiness.WebLogin.ChenckValidateRequest)">
            <summary>Sets the stub of PassPortSoap.ChenckValidate(ChenckValidateRequest request)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.b::Bussiness#WebLogin#PassPortSoap#Get_UserSex(Bussiness.WebLogin.Get_UserSexRequest)">
            <summary>Sets the stub of PassPortSoap.Get_UserSex(Get_UserSexRequest request)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ChenckValidateChenckValidateRequest">
            <summary>Sets the stub of PassPortSoap.ChenckValidate(ChenckValidateRequest request)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.Close">
            <summary>Sets the stub of ICommunicationObject.Close()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.CloseTimeSpan">
            <summary>Sets the stub of ICommunicationObject.Close(TimeSpan timeout)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.DidInteractiveInitializationGet">
            <summary>Sets the stub of IClientChannel.get_DidInteractiveInitialization()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.DisplayInitializationUI">
            <summary>Sets the stub of IClientChannel.DisplayInitializationUI()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.EndCloseIAsyncResult">
            <summary>Sets the stub of ICommunicationObject.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.EndDisplayInitializationUIIAsyncResult">
            <summary>Sets the stub of IClientChannel.EndDisplayInitializationUI(IAsyncResult result)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.EndOpenIAsyncResult">
            <summary>Sets the stub of ICommunicationObject.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ExtensionsGet">
            <summary>Sets the stub of IExtensibleObject`1.get_Extensions()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.GetPropertyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetProperty()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.Get_UserSexGet_UserSexRequest">
            <summary>Sets the stub of PassPortSoap.Get_UserSex(Get_UserSexRequest request)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.InputSessionGet">
            <summary>Sets the stub of IContextChannel.get_InputSession()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.LocalAddressGet">
            <summary>Sets the stub of IContextChannel.get_LocalAddress()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.Open">
            <summary>Sets the stub of ICommunicationObject.Open()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.OpenTimeSpan">
            <summary>Sets the stub of ICommunicationObject.Open(TimeSpan timeout)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.OperationTimeoutGet">
            <summary>Sets the stub of IContextChannel.get_OperationTimeout()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.OperationTimeoutSetTimeSpan">
            <summary>Sets the stub of IContextChannel.set_OperationTimeout(TimeSpan value)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.OutputSessionGet">
            <summary>Sets the stub of IContextChannel.get_OutputSession()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.RemoteAddressGet">
            <summary>Sets the stub of IContextChannel.get_RemoteAddress()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.SessionIdGet">
            <summary>Sets the stub of IContextChannel.get_SessionId()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.StateGet">
            <summary>Sets the stub of ICommunicationObject.get_State()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#Channels#IChannel#GetProperty``1">
            <summary>Sets the stub of IChannel.GetProperty()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of IClientChannel.BeginDisplayInitializationUI(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IClientChannel#DisplayInitializationUI">
            <summary>Sets the stub of IClientChannel.DisplayInitializationUI()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)">
            <summary>Sets the stub of IClientChannel.EndDisplayInitializationUI(IAsyncResult result)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#Abort">
            <summary>Sets the stub of ICommunicationObject.Abort()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginClose(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ICommunicationObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#Close">
            <summary>Sets the stub of ICommunicationObject.Close()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
            <summary>Sets the stub of ICommunicationObject.Close(TimeSpan timeout)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
            <summary>Sets the stub of ICommunicationObject.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
            <summary>Sets the stub of ICommunicationObject.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#Open">
            <summary>Sets the stub of ICommunicationObject.Open()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
            <summary>Sets the stub of ICommunicationObject.Open(TimeSpan timeout)</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ViaGet">
            <summary>Sets the stub of IClientChannel.get_Via()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IClientChannel#AllowInitializationUI">
            <summary>Sets the stub of IClientChannel.get_AllowInitializationUI()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#AllowOutputBatching">
            <summary>Sets the stub of IContextChannel.get_AllowOutputBatching()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IClientChannel#DidInteractiveInitialization">
            <summary>Sets the stub of IClientChannel.get_DidInteractiveInitialization()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions">
            <summary>Sets the stub of IExtensibleObject`1.get_Extensions()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#InputSession">
            <summary>Sets the stub of IContextChannel.get_InputSession()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#LocalAddress">
            <summary>Sets the stub of IContextChannel.get_LocalAddress()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#OperationTimeout">
            <summary>Sets the stub of IContextChannel.get_OperationTimeout()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#OutputSession">
            <summary>Sets the stub of IContextChannel.get_OutputSession()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#RemoteAddress">
            <summary>Sets the stub of IContextChannel.get_RemoteAddress()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IContextChannel#SessionId">
            <summary>Sets the stub of IContextChannel.get_SessionId()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#ICommunicationObject#State">
            <summary>Sets the stub of ICommunicationObject.get_State()</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapChannel.ssm::System#ServiceModel#IClientChannel#Via">
            <summary>Sets the stub of IClientChannel.get_Via()</summary>
        </member>
        <member name="T:Bussiness.WebLogin.Fakes.StubPassPortSoapClient">
            <summary>Stub type of Bussiness.WebLogin.PassPortSoapClient</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.CreateChannel">
            <summary>Sets the stub of ClientBase`1.CreateChannel()</summary>
        </member>
        <member name="F:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.CreateChannel01">
            <summary>Sets the stub of ClientBase`1.CreateChannel()</summary>
        </member>
        <member name="M:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.InitializeStub">
            <summary>Initializes a new instance of type StubPassPortSoapClient</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Bussiness.WebLogin.Fakes.StubPassPortSoapClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr">
            <summary>Shim type of Game.Server.Managers.ConsortiaLevelMgr</summary>
        </member>
        <member name="M:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.#ctor(Game.Server.Managers.ConsortiaLevelMgr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.Constructor">
            <summary>Sets the shim of ConsortiaLevelMgr.ConsortiaLevelMgr()</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.FindConsortiaLevelInfoInt32">
            <summary>Sets the shim of ConsortiaLevelMgr.FindConsortiaLevelInfo(Int32 level)</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.Init">
            <summary>Sets the shim of ConsortiaLevelMgr.Init()</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.LoadDictionaryOfInt32ConsortiaLevelInfo">
            <summary>Sets the shim of ConsortiaLevelMgr.Load(Dictionary`2&lt;Int32,ConsortiaLevelInfo&gt; consortiaLevel)</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.ReLoad">
            <summary>Sets the shim of ConsortiaLevelMgr.ReLoad()</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.StaticConstructor">
            <summary>Sets the shim of ConsortiaLevelMgr.ConsortiaLevelMgr()</summary>
        </member>
        <member name="T:Game.Server.Managers.Fakes.ShimConsortiaLevelMgr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Game.Server.Managers.Fakes.StubConsortiaLevelMgr">
            <summary>Stub type of Game.Server.Managers.ConsortiaLevelMgr</summary>
        </member>
        <member name="M:Game.Server.Managers.Fakes.StubConsortiaLevelMgr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Game.Server.Managers.Fakes.StubConsortiaLevelMgr.InitializeStub">
            <summary>Initializes a new instance of type StubConsortiaLevelMgr</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.StubConsortiaLevelMgr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.StubConsortiaLevelMgr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Game.Server.Managers.Fakes.StubConsortiaLevelMgr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.BussinessDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Bussiness</summary>
        </member>
    </members>
</doc>
